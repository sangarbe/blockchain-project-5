{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "verifierContract",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "proofHash",
          "type": "bytes32"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256[2]",
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "internalType": "uint256[2]",
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "internalType": "struct Pairing.G2Point",
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "internalType": "uint256",
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Pairing.G1Point",
              "name": "c",
              "type": "tuple"
            }
          ],
          "internalType": "struct SquareVerifier.Proof",
          "name": "proof",
          "type": "tuple"
        },
        {
          "internalType": "uint256[2]",
          "name": "inputs",
          "type": "uint256[2]"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"verifierContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"proofHash\",\"type\":\"bytes32\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"a\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256[2]\",\"name\":\"X\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"Y\",\"type\":\"uint256[2]\"}],\"internalType\":\"struct Pairing.G2Point\",\"name\":\"b\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"X\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"Y\",\"type\":\"uint256\"}],\"internalType\":\"struct Pairing.G1Point\",\"name\":\"c\",\"type\":\"tuple\"}],\"internalType\":\"struct SquareVerifier.Proof\",\"name\":\"proof\",\"type\":\"tuple\"},{\"internalType\":\"uint256[2]\",\"name\":\"inputs\",\"type\":\"uint256[2]\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"tokenURI\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"mint(address,uint256,string)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\",\"tokenURI\":\"The token URI of the minted token.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Called by owner to pause the contract.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Called by owner to unpause the contract.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]},\"project:/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0xd7102078ed8352d41a5780c2110fadf8d5fc96bf671b8f8d9d2fd7c64b137d58\",\"urls\":[\"bzz-raw://8b53612101eebd532dc4c036e7b8fb0058580de2880f6a94c2904254af18d0c7\",\"dweb:/ipfs/QmbpPRa5heWLLd1545jD2bZVWuLXDad8jd43qoJyqkL8YF\"]},\"project:/contracts/Oraclize.sol\":{\"keccak256\":\"0x6370a3f2c3a805eac208374765bd736462096c75bd47af3db7368a027380c359\",\"urls\":[\"bzz-raw://3e127d55e4df43b42c62862a999defa86e8adad1c81a6852d2ca125b68af14e3\",\"dweb:/ipfs/QmStjRyYUK5hiyRzq2Jx5MpxXSyQ7YotczjWbkQRCHGSNE\"]},\"project:/contracts/Pausable.sol\":{\"keccak256\":\"0x8a1bab3bb1dbd6394addcc8b1abfa3cca3c59e4b77a8932d8a908a9353d0a43b\",\"urls\":[\"bzz-raw://4c44f997412fbe9b0718303574c3d46401a5d39872cb90236641ffff03324a9a\",\"dweb:/ipfs/QmRhghrb1KNfKHYSyexK1bzJ8ir4nAgZL6Txt9b57JNSd7\"]},\"project:/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x991d4b67cb917a36abac9d3020c966f0ced4663a6032511f17cadb67e22c48ea\",\"urls\":[\"bzz-raw://d2c3bdd3559117a1e1a7023fc64ec7fe314edbcb47d5dc2f9bf0fb16eb793638\",\"dweb:/ipfs/QmXWLcujzsVE9wdkNnKDDw2BB3S5p8Y3hStpYvFH8jVxQp\"]},\"project:/contracts/SquareVerifier.sol\":{\"keccak256\":\"0xec2cf6b0037c4050bd557f3de8af3476a62c54cab8886e7757cbe14cbb3b813e\",\"urls\":[\"bzz-raw://f8750fb7569d5292649ab21c70dd660ceedba23b58a3aa62e496e59d2f1d2904\",\"dweb:/ipfs/QmQpENAH5GN4ahGUqssk7ZFGoHk8R4sBaMRGnciFzCqbnP\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200445738038062004457833981810160405262000037919081019062000429565b6040518060400160405280601081526020017f5265616c20537461746520486f6d6573000000000000000000000000000000008152506040518060400160405280600381526020017f52534800000000000000000000000000000000000000000000000000000000008152506040518060600160405280603f815260200162004418603f91398282826000620000d26200028360201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35060008060146101000a81548160ff021916908315150217905550620001a26301ffc9a760e01b6200028b60201b60201c565b620001ba6380ac58cd60e01b6200028b60201b60201c565b620001d263780e9d6360e01b6200028b60201b60201c565b82600f9080519060200190620001ea92919062000363565b5081601090805190602001906200020392919062000363565b5080601190805190602001906200021c92919062000363565b5062000235635b5e139f60e01b6200028b60201b60201c565b50505050505080601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000518565b600033905090565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620002f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620002ee9062000497565b60405180910390fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003a657805160ff1916838001178555620003d7565b82800160010185558215620003d7579182015b82811115620003d6578251825591602001919060010190620003b9565b5b509050620003e69190620003ea565b5090565b6200040f91905b808211156200040b576000816000905550600101620003f1565b5090565b90565b6000815190506200042381620004fe565b92915050565b6000602082840312156200043c57600080fd5b60006200044c8482850162000412565b91505092915050565b600062000464601c83620004b9565b91507f4552433136353a20696e76616c696420696e74657266616365206964000000006000830152602082019050919050565b60006020820190508181036000830152620004b28162000455565b9050919050565b600082825260208201905092915050565b6000620004d782620004de565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200050981620004ca565b81146200051557600080fd5b50565b613ef080620005286000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80636352211e116100f9578063a22cb46511610097578063d3fc986411610071578063d3fc9864146104cb578063d547cfb7146104fb578063e985e9c514610519578063f2fde38b14610549576101c4565b8063a22cb46514610463578063b88d4fde1461047f578063c87b56dd1461049b576101c4565b80638456cb59116100d35780638456cb59146103ff5780638da5cb5b146104095780638f32d59b1461042757806395d89b4114610445576101c4565b80636352211e1461039557806370a08231146103c5578063715018a6146103f5576101c4565b80632f745c591161016657806342842e0e1161014057806342842e0e1461030f5780634f6ccce71461032b5780635c975abb1461035b57806361d50f7314610379576101c4565b80632f745c59146102b957806338bbfa50146102e95780633f4ba83a14610305576101c4565b8063095ea7b3116101a2578063095ea7b31461024757806318160ddd1461026357806323b872dd1461028157806327dc297e1461029d576101c4565b806301ffc9a7146101c957806306fdde03146101f9578063081812fc14610217575b600080fd5b6101e360048036036101de919081019061302d565b610565565b6040516101f0919061392e565b60405180910390f35b6102016105cd565b60405161020e9190613949565b60405180910390f35b610231600480360361022c919081019061307f565b61066f565b60405161023e9190613875565b60405180910390f35b610261600480360361025c9190810190612e29565b6106f4565b005b61026b6108af565b6040516102789190613bbd565b60405180910390f35b61029b60048036036102969190810190612d23565b6108bc565b005b6102b760048036036102b29190810190612f5a565b6108df565b005b6102d360048036036102ce9190810190612e29565b610922565b6040516102e09190613bbd565b60405180910390f35b61030360048036036102fe9190810190612fae565b610995565b005b61030d61099a565b005b61032960048036036103249190810190612d23565b610a8a565b005b6103456004803603610340919081019061307f565b610aaa565b6040516103529190613bbd565b60405180910390f35b610363610ade565b604051610370919061392e565b60405180910390f35b610393600480360361038e9190810190612ecc565b610af4565b005b6103af60048036036103aa919081019061307f565b610c15565b6040516103bc9190613875565b60405180910390f35b6103df60048036036103da9190810190612cbe565b610cc7565b6040516103ec9190613bbd565b60405180910390f35b6103fd610d86565b005b610407610e8c565b005b610411610f7e565b60405161041e9190613875565b60405180910390f35b61042f610fa7565b60405161043c919061392e565b60405180910390f35b61044d611005565b60405161045a9190613949565b60405180910390f35b61047d60048036036104789190810190612ded565b6110a7565b005b61049960048036036104949190810190612d72565b6111dd565b005b6104b560048036036104b0919081019061307f565b611203565b6040516104c29190613949565b60405180910390f35b6104e560048036036104e09190810190612e65565b6113bf565b6040516104f2919061392e565b60405180910390f35b610503611427565b6040516105109190613949565b60405180910390f35b610533600480360361052e9190810190612ce7565b6114c9565b604051610540919061392e565b60405180910390f35b610563600480360361055e9190810190612cbe565b61155d565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106655780601f1061063a57610100808354040283529160200191610665565b820191906000526020600020905b81548152906001019060200180831161064857829003601f168201915b5050505050905090565b600061067a826115b0565b6106b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b090613b2b565b60405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106ff82610c15565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610770576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107679061398b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661078f611622565b73ffffffffffffffffffffffffffffffffffffffff1614806107be57506107bd816107b8611622565b6114c9565b5b6107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f490613a6b565b60405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b6108c6338261162a565b6108cf57600080fd5b6108da8383836116bf565b505050565b61091e828260006040519080825280601f01601f1916602001820160405280156109185781602001600182028038833980820191505090505b50610995565b5050565b600061092d83610cc7565b821061093857600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061098257fe5b9060005260206000200154905092915050565b505050565b6109a2610fa7565b6109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d890613aeb565b60405180910390fd5b600060149054906101000a900460ff16610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a279061396b565b60405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610a73611622565b604051610a809190613890565b60405180910390a1565b610aa5838383604051806020016040528060008152506111dd565b505050565b6000610ab46108af565b8210610abf57600080fd5b60088281548110610acc57fe5b90600052602060002001549050919050565b60008060149054906101000a900460ff16905090565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc83836040518363ffffffff1660e01b8152600401610b51929190613b92565b60206040518083038186803b158015610b6957600080fd5b505afa158015610b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ba19190810190612f31565b610be0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd7906139eb565b60405180910390fd5b610bf48484610bef85856116e3565b611726565b610c0e8484604051806020016040528060008152506113bf565b5050505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb590613b2b565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f90613b0b565b60405180910390fd5b610d7f600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061189d565b9050919050565b610d8e610fa7565b610dcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc490613aeb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610e94610fa7565b610ed3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eca90613aeb565b60405180910390fd5b600060149054906101000a900460ff1615610f23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1a90613aab565b60405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f67611622565b604051610f749190613890565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fe9611622565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561109d5780601f106110725761010080835404028352916020019161109d565b820191906000526020600020905b81548152906001019060200180831161108057829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110e057600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111d1919061392e565b60405180910390a35050565b6111e88484846108bc565b6111f4848484846118ab565b6111fd57600080fd5b50505050565b606061120e826115b0565b61124d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124490613a8b565b60405180910390fd5b6060601260008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112f65780601f106112cb576101008083540402835291602001916112f6565b820191906000526020600020905b8154815290600101906020018083116112d957829003601f168201915b5050505050905060008151141561131357611310836119c2565b90505b6113b760118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113ac5780601f10611381576101008083540402835291602001916113ac565b820191906000526020600020905b81548152906001019060200180831161138f57829003601f168201915b505050505082611aef565b915050919050565b60006113c9610fa7565b611408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ff90613aeb565b60405180910390fd5b6114128484611b33565b61141c8383611b54565b600190509392505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114bf5780601f10611494576101008083540402835291602001916114bf565b820191906000526020600020905b8154815290600101906020018083116114a257829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611565610fa7565b6115a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159b90613aeb565b60405180910390fd5b6115ad81611bc8565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b60008061163683610c15565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806116a557508373ffffffffffffffffffffffffffffffffffffffff1661168d8461066f565b73ffffffffffffffffffffffffffffffffffffffff16145b806116b657506116b581856114c9565b5b91505092915050565b6116ca838383611cf6565b6116d48382611f75565b6116de8282612113565b505050565b6000826000015183602001518460400151846040516020016117089493929190613b4b565b60405160208183030381529060405280519060200120905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166014600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c290613acb565b60405180910390fd5b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152506014600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050507fb28582aaae510e6d1868676347916349fa4c0c49734e1a01e4373ff26a57f092838383604051611890939291906138f7565b60405180910390a1505050565b600081600001549050919050565b60006118cc8473ffffffffffffffffffffffffffffffffffffffff166121da565b6118d957600190506119ba565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161191a94939291906138ab565b602060405180830381600087803b15801561193457600080fd5b505af1158015611948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196c9190810190613056565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60606000821415611a0a576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611aea565b600082905060005b60008214611a34578080600101915050600a8281611a2c57fe5b049150611a12565b6060816040519080825280601f01601f191660200182016040528015611a695781602001600182028038833980820191505090505b50905060006001830390505b60008614611ae257600a8681611a8757fe5b0660300160f81b82828060019003935081518110611aa157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681611ada57fe5b049550611a75565b819450505050505b919050565b6060611b2b8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612225565b905092915050565b611b3d82826124e7565b611b478282612113565b611b50816126e9565b5050565b611b5d826115b0565b611b9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9390613a8b565b60405180910390fd5b80601260008481526020019081526020016000209080519060200190611bc39291906128d1565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2f90613a0b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060149054906101000a900460ff1615611d46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3d90613aab565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16611d6682610c15565b73ffffffffffffffffffffffffffffffffffffffff1614611dbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db3906139cb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2390613a2b565b60405180910390fd5b611e3581612735565b611e7c600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206127f3565b611ec3600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612816565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611fcd6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061282c90919063ffffffff16565b90506000600760008481526020019081526020016000205490508181146120ba576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061203a57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061209257fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361210c9190612951565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561221c57506000801b8214155b92505050919050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156122815781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612306578881815181106122ad57fe5b602001015160f81c60f81b8383806001019450815181106122ca57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612298565b600090505b87518110156123795787818151811061232057fe5b602001015160f81c60f81b83838060010194508151811061233d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061230b565b600090505b86518110156123ec5786818151811061239357fe5b602001015160f81c60f81b8383806001019450815181106123b057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061237e565b600090505b855181101561245f5785818151811061240657fe5b602001015160f81c60f81b83838060010194508151811061242357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123f1565b600090505b84518110156124d25784818151811061247957fe5b602001015160f81c60f81b83838060010194508151811061249657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612464565b82995050505050505050505095945050505050565b600060149054906101000a900460ff1615612537576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161252e90613aab565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156125a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161259e906139ab565b60405180910390fd5b6125b0816115b0565b156125f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125e790613a4b565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612689600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612816565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146127f05760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61280b6001826000015461282c90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061286e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612876565b905092915050565b60008383111582906128be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128b59190613949565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061291257805160ff1916838001178555612940565b82800160010185558215612940579182015b8281111561293f578251825591602001919060010190612924565b5b50905061294d919061297d565b5090565b81548183558181111561297857818360005260206000209182019101612977919061297d565b5b505050565b61299f91905b8082111561299b576000816000905550600101612983565b5090565b90565b6000813590506129b181613e3a565b92915050565b600082601f8301126129c857600080fd5b60026129db6129d682613c05565b613bd8565b915081838560208402820111156129f157600080fd5b60005b83811015612a215781612a078882612ca9565b8452602084019350602083019250506001810190506129f4565b5050505092915050565b600082601f830112612a3c57600080fd5b6002612a4f612a4a82613c27565b613bd8565b91508183856020840282011115612a6557600080fd5b60005b83811015612a955781612a7b8882612ca9565b845260208401935060208301925050600181019050612a68565b5050505092915050565b600081359050612aae81613e51565b92915050565b600081519050612ac381613e51565b92915050565b600081359050612ad881613e68565b92915050565b600081359050612aed81613e7f565b92915050565b600081519050612b0281613e7f565b92915050565b600082601f830112612b1957600080fd5b8135612b2c612b2782613c49565b613bd8565b91508082526020830160208301858383011115612b4857600080fd5b612b53838284613de7565b50505092915050565b600082601f830112612b6d57600080fd5b8135612b80612b7b82613c75565b613bd8565b91508082526020830160208301858383011115612b9c57600080fd5b612ba7838284613de7565b50505092915050565b600060408284031215612bc257600080fd5b612bcc6040613bd8565b90506000612bdc84828501612ca9565b6000830152506020612bf084828501612ca9565b60208301525092915050565b600060808284031215612c0e57600080fd5b612c186040613bd8565b90506000612c28848285016129b7565b6000830152506040612c3c848285016129b7565b60208301525092915050565b60006101008284031215612c5b57600080fd5b612c656060613bd8565b90506000612c7584828501612bb0565b6000830152506040612c8984828501612bfc565b60208301525060c0612c9d84828501612bb0565b60408301525092915050565b600081359050612cb881613e96565b92915050565b600060208284031215612cd057600080fd5b6000612cde848285016129a2565b91505092915050565b60008060408385031215612cfa57600080fd5b6000612d08858286016129a2565b9250506020612d19858286016129a2565b9150509250929050565b600080600060608486031215612d3857600080fd5b6000612d46868287016129a2565b9350506020612d57868287016129a2565b9250506040612d6886828701612ca9565b9150509250925092565b60008060008060808587031215612d8857600080fd5b6000612d96878288016129a2565b9450506020612da7878288016129a2565b9350506040612db887828801612ca9565b925050606085013567ffffffffffffffff811115612dd557600080fd5b612de187828801612b08565b91505092959194509250565b60008060408385031215612e0057600080fd5b6000612e0e858286016129a2565b9250506020612e1f85828601612a9f565b9150509250929050565b60008060408385031215612e3c57600080fd5b6000612e4a858286016129a2565b9250506020612e5b85828601612ca9565b9150509250929050565b600080600060608486031215612e7a57600080fd5b6000612e88868287016129a2565b9350506020612e9986828701612ca9565b925050604084013567ffffffffffffffff811115612eb657600080fd5b612ec286828701612b5c565b9150509250925092565b6000806000806101808587031215612ee357600080fd5b6000612ef1878288016129a2565b9450506020612f0287828801612ca9565b9350506040612f1387828801612c48565b925050610140612f2587828801612a2b565b91505092959194509250565b600060208284031215612f4357600080fd5b6000612f5184828501612ab4565b91505092915050565b60008060408385031215612f6d57600080fd5b6000612f7b85828601612ac9565b925050602083013567ffffffffffffffff811115612f9857600080fd5b612fa485828601612b5c565b9150509250929050565b600080600060608486031215612fc357600080fd5b6000612fd186828701612ac9565b935050602084013567ffffffffffffffff811115612fee57600080fd5b612ffa86828701612b5c565b925050604084013567ffffffffffffffff81111561301757600080fd5b61302386828701612b08565b9150509250925092565b60006020828403121561303f57600080fd5b600061304d84828501612ade565b91505092915050565b60006020828403121561306857600080fd5b600061307684828501612af3565b91505092915050565b60006020828403121561309157600080fd5b600061309f84828501612ca9565b91505092915050565b60006130b48383613857565b60208301905092915050565b6130c981613db1565b82525050565b6130d881613d33565b82525050565b6130e781613cc0565b6130f18184613d06565b92506130fc82613cab565b8060005b8381101561312d57815161311487826130a8565b965061311f83613cee565b925050600181019050613100565b505050505050565b61313e81613cb5565b6131488184613cfb565b925061315382613ca1565b8060005b8381101561318457815161316b87826130a8565b965061317683613ce1565b925050600181019050613157565b505050505050565b61319581613d45565b82525050565b6131a481613d51565b82525050565b60006131b582613ccb565b6131bf8185613d11565b93506131cf818560208601613df6565b6131d881613e29565b840191505092915050565b60006131ee82613cd6565b6131f88185613d22565b9350613208818560208601613df6565b61321181613e29565b840191505092915050565b6000613229601483613d22565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000613269602883613d22565b91507f4552433732313a2063616e206e6f7420617070726f766520746f20637572726560008301527f6e74206f776e65720000000000000000000000000000000000000000000000006020830152604082019050919050565b60006132cf602883613d22565b91507f4552433732313a20696e76616c6964206d696e7420746f20746865207a65726f60008301527f20616464726573730000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613335603783613d22565b91507f4552433732313a2066726f6d206d75737420626520746865206f776e6572206f60008301527f662074686520746f6b656e20746f207472616e736665720000000000000000006020830152604082019050919050565b600061339b602983613d22565b91507f536f6c6e53717561726556657269666965723a20736f6c7574696f6e206e6f7460008301527f20766572696669656400000000000000000000000000000000000000000000006020830152604082019050919050565b6000613401602683613d22565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613467602c83613d22565b91507f4552433732313a2063616e206e6f74207472616e7366657220746f207468652060008301527f7a65726f206164647265737300000000000000000000000000000000000000006020830152604082019050919050565b60006134cd601c83613d22565b91507f4552433732313a20746f6b656e20616c726561647920657869737473000000006000830152602082019050919050565b600061350d603983613d22565b91507f4552433732313a2063616e206e6f7420617070726f7665206966206e6f74206f60008301527f776e6572206e6f7220617070726f76656420666f7220616c6c000000000000006020830152604082019050919050565b6000613573602483613d22565b91507f4552433732314d657461646174613a20746f6b656e20646f6573206e6f74206560008301527f78697374000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006135d9601083613d22565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000613619602983613d22565b91507f536f6c6e53717561726556657269666965723a20736f6c7574696f6e20616c7260008301527f65616479207573656400000000000000000000000000000000000000000000006020830152604082019050919050565b600061367f602083613d22565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006136bf602d83613d22565b91507f4552433732313a206e6f2062616c616e636520717565727920666f722074686560008301527f207a65726f2061646472657373000000000000000000000000000000000000006020830152604082019050919050565b6000613725601c83613d22565b91507f4552433732313a20746f6b656e20646f6573206e6f74206578697374000000006000830152602082019050919050565b60408201600082015161376e6000850182613857565b5060208201516137816020850182613857565b50505050565b60408201600082015161379d6000850182613857565b5060208201516137b06020850182613857565b50505050565b6080820160008201516137cc6000850182613135565b5060208201516137df6040850182613135565b50505050565b6080820160008201516137fb6000850182613135565b50602082015161380e6040850182613135565b50505050565b6101008201600082015161382b6000850182613758565b50602082015161383e60408501826137b6565b50604082015161385160c0850182613758565b50505050565b61386081613da7565b82525050565b61386f81613da7565b82525050565b600060208201905061388a60008301846130cf565b92915050565b60006020820190506138a560008301846130c0565b92915050565b60006080820190506138c060008301876130c0565b6138cd60208301866130cf565b6138da6040830185613866565b81810360608301526138ec81846131aa565b905095945050505050565b600060608201905061390c60008301866130cf565b6139196020830185613866565b613926604083018461319b565b949350505050565b6000602082019050613943600083018461318c565b92915050565b6000602082019050818103600083015261396381846131e3565b905092915050565b600060208201905081810360008301526139848161321c565b9050919050565b600060208201905081810360008301526139a48161325c565b9050919050565b600060208201905081810360008301526139c4816132c2565b9050919050565b600060208201905081810360008301526139e481613328565b9050919050565b60006020820190508181036000830152613a048161338e565b9050919050565b60006020820190508181036000830152613a24816133f4565b9050919050565b60006020820190508181036000830152613a448161345a565b9050919050565b60006020820190508181036000830152613a64816134c0565b9050919050565b60006020820190508181036000830152613a8481613500565b9050919050565b60006020820190508181036000830152613aa481613566565b9050919050565b60006020820190508181036000830152613ac4816135cc565b9050919050565b60006020820190508181036000830152613ae48161360c565b9050919050565b60006020820190508181036000830152613b0481613672565b9050919050565b60006020820190508181036000830152613b24816136b2565b9050919050565b60006020820190508181036000830152613b4481613718565b9050919050565b600061014082019050613b616000830187613787565b613b6e60408301866137e5565b613b7b60c0830185613787565b613b896101008301846130de565b95945050505050565b600061014082019050613ba86000830185613814565b613bb66101008301846130de565b9392505050565b6000602082019050613bd26000830184613866565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613bfb57600080fd5b8060405250919050565b600067ffffffffffffffff821115613c1c57600080fd5b602082029050919050565b600067ffffffffffffffff821115613c3e57600080fd5b602082029050919050565b600067ffffffffffffffff821115613c6057600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613c8c57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613d3e82613d87565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613dbc82613dc3565b9050919050565b6000613dce82613dd5565b9050919050565b6000613de082613d87565b9050919050565b82818337600083830152505050565b60005b83811015613e14578082015181840152602081019050613df9565b83811115613e23576000848401525b50505050565b6000601f19601f8301169050919050565b613e4381613d33565b8114613e4e57600080fd5b50565b613e5a81613d45565b8114613e6557600080fd5b50565b613e7181613d51565b8114613e7c57600080fd5b50565b613e8881613d5b565b8114613e9357600080fd5b50565b613e9f81613da7565b8114613eaa57600080fd5b5056fea365627a7a7231582039d025de4adf55f18f22ce7f3de160d82d729bab167be2c9f72136e98e528cc06c6578706572696d656e74616cf564736f6c6343000510004068747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c80636352211e116100f9578063a22cb46511610097578063d3fc986411610071578063d3fc9864146104cb578063d547cfb7146104fb578063e985e9c514610519578063f2fde38b14610549576101c4565b8063a22cb46514610463578063b88d4fde1461047f578063c87b56dd1461049b576101c4565b80638456cb59116100d35780638456cb59146103ff5780638da5cb5b146104095780638f32d59b1461042757806395d89b4114610445576101c4565b80636352211e1461039557806370a08231146103c5578063715018a6146103f5576101c4565b80632f745c591161016657806342842e0e1161014057806342842e0e1461030f5780634f6ccce71461032b5780635c975abb1461035b57806361d50f7314610379576101c4565b80632f745c59146102b957806338bbfa50146102e95780633f4ba83a14610305576101c4565b8063095ea7b3116101a2578063095ea7b31461024757806318160ddd1461026357806323b872dd1461028157806327dc297e1461029d576101c4565b806301ffc9a7146101c957806306fdde03146101f9578063081812fc14610217575b600080fd5b6101e360048036036101de919081019061302d565b610565565b6040516101f0919061392e565b60405180910390f35b6102016105cd565b60405161020e9190613949565b60405180910390f35b610231600480360361022c919081019061307f565b61066f565b60405161023e9190613875565b60405180910390f35b610261600480360361025c9190810190612e29565b6106f4565b005b61026b6108af565b6040516102789190613bbd565b60405180910390f35b61029b60048036036102969190810190612d23565b6108bc565b005b6102b760048036036102b29190810190612f5a565b6108df565b005b6102d360048036036102ce9190810190612e29565b610922565b6040516102e09190613bbd565b60405180910390f35b61030360048036036102fe9190810190612fae565b610995565b005b61030d61099a565b005b61032960048036036103249190810190612d23565b610a8a565b005b6103456004803603610340919081019061307f565b610aaa565b6040516103529190613bbd565b60405180910390f35b610363610ade565b604051610370919061392e565b60405180910390f35b610393600480360361038e9190810190612ecc565b610af4565b005b6103af60048036036103aa919081019061307f565b610c15565b6040516103bc9190613875565b60405180910390f35b6103df60048036036103da9190810190612cbe565b610cc7565b6040516103ec9190613bbd565b60405180910390f35b6103fd610d86565b005b610407610e8c565b005b610411610f7e565b60405161041e9190613875565b60405180910390f35b61042f610fa7565b60405161043c919061392e565b60405180910390f35b61044d611005565b60405161045a9190613949565b60405180910390f35b61047d60048036036104789190810190612ded565b6110a7565b005b61049960048036036104949190810190612d72565b6111dd565b005b6104b560048036036104b0919081019061307f565b611203565b6040516104c29190613949565b60405180910390f35b6104e560048036036104e09190810190612e65565b6113bf565b6040516104f2919061392e565b60405180910390f35b610503611427565b6040516105109190613949565b60405180910390f35b610533600480360361052e9190810190612ce7565b6114c9565b604051610540919061392e565b60405180910390f35b610563600480360361055e9190810190612cbe565b61155d565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106655780601f1061063a57610100808354040283529160200191610665565b820191906000526020600020905b81548152906001019060200180831161064857829003601f168201915b5050505050905090565b600061067a826115b0565b6106b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b090613b2b565b60405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006106ff82610c15565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610770576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107679061398b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1661078f611622565b73ffffffffffffffffffffffffffffffffffffffff1614806107be57506107bd816107b8611622565b6114c9565b5b6107fd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f490613a6b565b60405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b6108c6338261162a565b6108cf57600080fd5b6108da8383836116bf565b505050565b61091e828260006040519080825280601f01601f1916602001820160405280156109185781602001600182028038833980820191505090505b50610995565b5050565b600061092d83610cc7565b821061093857600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061098257fe5b9060005260206000200154905092915050565b505050565b6109a2610fa7565b6109e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109d890613aeb565b60405180910390fd5b600060149054906101000a900460ff16610a30576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a279061396b565b60405180910390fd5b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610a73611622565b604051610a809190613890565b60405180910390a1565b610aa5838383604051806020016040528060008152506111dd565b505050565b6000610ab46108af565b8210610abf57600080fd5b60088281548110610acc57fe5b90600052602060002001549050919050565b60008060149054906101000a900460ff16905090565b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343cd76fc83836040518363ffffffff1660e01b8152600401610b51929190613b92565b60206040518083038186803b158015610b6957600080fd5b505afa158015610b7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250610ba19190810190612f31565b610be0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd7906139eb565b60405180910390fd5b610bf48484610bef85856116e3565b611726565b610c0e8484604051806020016040528060008152506113bf565b5050505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610cbe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb590613b2b565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610d38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2f90613b0b565b60405180910390fd5b610d7f600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061189d565b9050919050565b610d8e610fa7565b610dcd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc490613aeb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610e94610fa7565b610ed3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eca90613aeb565b60405180910390fd5b600060149054906101000a900460ff1615610f23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1a90613aab565b60405180910390fd5b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f67611622565b604051610f749190613890565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610fe9611622565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b606060108054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561109d5780601f106110725761010080835404028352916020019161109d565b820191906000526020600020905b81548152906001019060200180831161108057829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156110e057600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111d1919061392e565b60405180910390a35050565b6111e88484846108bc565b6111f4848484846118ab565b6111fd57600080fd5b50505050565b606061120e826115b0565b61124d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124490613a8b565b60405180910390fd5b6060601260008481526020019081526020016000208054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112f65780601f106112cb576101008083540402835291602001916112f6565b820191906000526020600020905b8154815290600101906020018083116112d957829003601f168201915b5050505050905060008151141561131357611310836119c2565b90505b6113b760118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156113ac5780601f10611381576101008083540402835291602001916113ac565b820191906000526020600020905b81548152906001019060200180831161138f57829003601f168201915b505050505082611aef565b915050919050565b60006113c9610fa7565b611408576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ff90613aeb565b60405180910390fd5b6114128484611b33565b61141c8383611b54565b600190509392505050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156114bf5780601f10611494576101008083540402835291602001916114bf565b820191906000526020600020905b8154815290600101906020018083116114a257829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b611565610fa7565b6115a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159b90613aeb565b60405180910390fd5b6115ad81611bc8565b50565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b60008061163683610c15565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806116a557508373ffffffffffffffffffffffffffffffffffffffff1661168d8461066f565b73ffffffffffffffffffffffffffffffffffffffff16145b806116b657506116b581856114c9565b5b91505092915050565b6116ca838383611cf6565b6116d48382611f75565b6116de8282612113565b505050565b6000826000015183602001518460400151846040516020016117089493929190613b4b565b60405160208183030381529060405280519060200120905092915050565b600073ffffffffffffffffffffffffffffffffffffffff166014600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146117cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117c290613acb565b60405180910390fd5b60405180604001604052808473ffffffffffffffffffffffffffffffffffffffff168152602001838152506014600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101559050507fb28582aaae510e6d1868676347916349fa4c0c49734e1a01e4373ff26a57f092838383604051611890939291906138f7565b60405180910390a1505050565b600081600001549050919050565b60006118cc8473ffffffffffffffffffffffffffffffffffffffff166121da565b6118d957600190506119ba565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b815260040161191a94939291906138ab565b602060405180830381600087803b15801561193457600080fd5b505af1158015611948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196c9190810190613056565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b60606000821415611a0a576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611aea565b600082905060005b60008214611a34578080600101915050600a8281611a2c57fe5b049150611a12565b6060816040519080825280601f01601f191660200182016040528015611a695781602001600182028038833980820191505090505b50905060006001830390505b60008614611ae257600a8681611a8757fe5b0660300160f81b82828060019003935081518110611aa157fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a8681611ada57fe5b049550611a75565b819450505050505b919050565b6060611b2b8383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250612225565b905092915050565b611b3d82826124e7565b611b478282612113565b611b50816126e9565b5050565b611b5d826115b0565b611b9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b9390613a8b565b60405180910390fd5b80601260008481526020019081526020016000209080519060200190611bc39291906128d1565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2f90613a0b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600060149054906101000a900460ff1615611d46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3d90613aab565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff16611d6682610c15565b73ffffffffffffffffffffffffffffffffffffffff1614611dbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611db3906139cb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611e2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2390613a2b565b60405180910390fd5b611e3581612735565b611e7c600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206127f3565b611ec3600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612816565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000611fcd6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061282c90919063ffffffff16565b90506000600760008481526020019081526020016000205490508181146120ba576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061203a57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061209257fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548091906001900361210c9190612951565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f915080821415801561221c57506000801b8214155b92505050919050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156122815781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015612306578881815181106122ad57fe5b602001015160f81c60f81b8383806001019450815181106122ca57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612298565b600090505b87518110156123795787818151811061232057fe5b602001015160f81c60f81b83838060010194508151811061233d57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061230b565b600090505b86518110156123ec5786818151811061239357fe5b602001015160f81c60f81b8383806001019450815181106123b057fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061237e565b600090505b855181101561245f5785818151811061240657fe5b602001015160f81c60f81b83838060010194508151811061242357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123f1565b600090505b84518110156124d25784818151811061247957fe5b602001015160f81c60f81b83838060010194508151811061249657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612464565b82995050505050505050505095945050505050565b600060149054906101000a900460ff1615612537576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161252e90613aab565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156125a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161259e906139ab565b60405180910390fd5b6125b0816115b0565b156125f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016125e790613a4b565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612689600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612816565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146127f05760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61280b6001826000015461282c90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600061286e83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612876565b905092915050565b60008383111582906128be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128b59190613949565b60405180910390fd5b5060008385039050809150509392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061291257805160ff1916838001178555612940565b82800160010185558215612940579182015b8281111561293f578251825591602001919060010190612924565b5b50905061294d919061297d565b5090565b81548183558181111561297857818360005260206000209182019101612977919061297d565b5b505050565b61299f91905b8082111561299b576000816000905550600101612983565b5090565b90565b6000813590506129b181613e3a565b92915050565b600082601f8301126129c857600080fd5b60026129db6129d682613c05565b613bd8565b915081838560208402820111156129f157600080fd5b60005b83811015612a215781612a078882612ca9565b8452602084019350602083019250506001810190506129f4565b5050505092915050565b600082601f830112612a3c57600080fd5b6002612a4f612a4a82613c27565b613bd8565b91508183856020840282011115612a6557600080fd5b60005b83811015612a955781612a7b8882612ca9565b845260208401935060208301925050600181019050612a68565b5050505092915050565b600081359050612aae81613e51565b92915050565b600081519050612ac381613e51565b92915050565b600081359050612ad881613e68565b92915050565b600081359050612aed81613e7f565b92915050565b600081519050612b0281613e7f565b92915050565b600082601f830112612b1957600080fd5b8135612b2c612b2782613c49565b613bd8565b91508082526020830160208301858383011115612b4857600080fd5b612b53838284613de7565b50505092915050565b600082601f830112612b6d57600080fd5b8135612b80612b7b82613c75565b613bd8565b91508082526020830160208301858383011115612b9c57600080fd5b612ba7838284613de7565b50505092915050565b600060408284031215612bc257600080fd5b612bcc6040613bd8565b90506000612bdc84828501612ca9565b6000830152506020612bf084828501612ca9565b60208301525092915050565b600060808284031215612c0e57600080fd5b612c186040613bd8565b90506000612c28848285016129b7565b6000830152506040612c3c848285016129b7565b60208301525092915050565b60006101008284031215612c5b57600080fd5b612c656060613bd8565b90506000612c7584828501612bb0565b6000830152506040612c8984828501612bfc565b60208301525060c0612c9d84828501612bb0565b60408301525092915050565b600081359050612cb881613e96565b92915050565b600060208284031215612cd057600080fd5b6000612cde848285016129a2565b91505092915050565b60008060408385031215612cfa57600080fd5b6000612d08858286016129a2565b9250506020612d19858286016129a2565b9150509250929050565b600080600060608486031215612d3857600080fd5b6000612d46868287016129a2565b9350506020612d57868287016129a2565b9250506040612d6886828701612ca9565b9150509250925092565b60008060008060808587031215612d8857600080fd5b6000612d96878288016129a2565b9450506020612da7878288016129a2565b9350506040612db887828801612ca9565b925050606085013567ffffffffffffffff811115612dd557600080fd5b612de187828801612b08565b91505092959194509250565b60008060408385031215612e0057600080fd5b6000612e0e858286016129a2565b9250506020612e1f85828601612a9f565b9150509250929050565b60008060408385031215612e3c57600080fd5b6000612e4a858286016129a2565b9250506020612e5b85828601612ca9565b9150509250929050565b600080600060608486031215612e7a57600080fd5b6000612e88868287016129a2565b9350506020612e9986828701612ca9565b925050604084013567ffffffffffffffff811115612eb657600080fd5b612ec286828701612b5c565b9150509250925092565b6000806000806101808587031215612ee357600080fd5b6000612ef1878288016129a2565b9450506020612f0287828801612ca9565b9350506040612f1387828801612c48565b925050610140612f2587828801612a2b565b91505092959194509250565b600060208284031215612f4357600080fd5b6000612f5184828501612ab4565b91505092915050565b60008060408385031215612f6d57600080fd5b6000612f7b85828601612ac9565b925050602083013567ffffffffffffffff811115612f9857600080fd5b612fa485828601612b5c565b9150509250929050565b600080600060608486031215612fc357600080fd5b6000612fd186828701612ac9565b935050602084013567ffffffffffffffff811115612fee57600080fd5b612ffa86828701612b5c565b925050604084013567ffffffffffffffff81111561301757600080fd5b61302386828701612b08565b9150509250925092565b60006020828403121561303f57600080fd5b600061304d84828501612ade565b91505092915050565b60006020828403121561306857600080fd5b600061307684828501612af3565b91505092915050565b60006020828403121561309157600080fd5b600061309f84828501612ca9565b91505092915050565b60006130b48383613857565b60208301905092915050565b6130c981613db1565b82525050565b6130d881613d33565b82525050565b6130e781613cc0565b6130f18184613d06565b92506130fc82613cab565b8060005b8381101561312d57815161311487826130a8565b965061311f83613cee565b925050600181019050613100565b505050505050565b61313e81613cb5565b6131488184613cfb565b925061315382613ca1565b8060005b8381101561318457815161316b87826130a8565b965061317683613ce1565b925050600181019050613157565b505050505050565b61319581613d45565b82525050565b6131a481613d51565b82525050565b60006131b582613ccb565b6131bf8185613d11565b93506131cf818560208601613df6565b6131d881613e29565b840191505092915050565b60006131ee82613cd6565b6131f88185613d22565b9350613208818560208601613df6565b61321181613e29565b840191505092915050565b6000613229601483613d22565b91507f5061757361626c653a206e6f74207061757365640000000000000000000000006000830152602082019050919050565b6000613269602883613d22565b91507f4552433732313a2063616e206e6f7420617070726f766520746f20637572726560008301527f6e74206f776e65720000000000000000000000000000000000000000000000006020830152604082019050919050565b60006132cf602883613d22565b91507f4552433732313a20696e76616c6964206d696e7420746f20746865207a65726f60008301527f20616464726573730000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613335603783613d22565b91507f4552433732313a2066726f6d206d75737420626520746865206f776e6572206f60008301527f662074686520746f6b656e20746f207472616e736665720000000000000000006020830152604082019050919050565b600061339b602983613d22565b91507f536f6c6e53717561726556657269666965723a20736f6c7574696f6e206e6f7460008301527f20766572696669656400000000000000000000000000000000000000000000006020830152604082019050919050565b6000613401602683613d22565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613467602c83613d22565b91507f4552433732313a2063616e206e6f74207472616e7366657220746f207468652060008301527f7a65726f206164647265737300000000000000000000000000000000000000006020830152604082019050919050565b60006134cd601c83613d22565b91507f4552433732313a20746f6b656e20616c726561647920657869737473000000006000830152602082019050919050565b600061350d603983613d22565b91507f4552433732313a2063616e206e6f7420617070726f7665206966206e6f74206f60008301527f776e6572206e6f7220617070726f76656420666f7220616c6c000000000000006020830152604082019050919050565b6000613573602483613d22565b91507f4552433732314d657461646174613a20746f6b656e20646f6573206e6f74206560008301527f78697374000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b60006135d9601083613d22565b91507f5061757361626c653a20706175736564000000000000000000000000000000006000830152602082019050919050565b6000613619602983613d22565b91507f536f6c6e53717561726556657269666965723a20736f6c7574696f6e20616c7260008301527f65616479207573656400000000000000000000000000000000000000000000006020830152604082019050919050565b600061367f602083613d22565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006136bf602d83613d22565b91507f4552433732313a206e6f2062616c616e636520717565727920666f722074686560008301527f207a65726f2061646472657373000000000000000000000000000000000000006020830152604082019050919050565b6000613725601c83613d22565b91507f4552433732313a20746f6b656e20646f6573206e6f74206578697374000000006000830152602082019050919050565b60408201600082015161376e6000850182613857565b5060208201516137816020850182613857565b50505050565b60408201600082015161379d6000850182613857565b5060208201516137b06020850182613857565b50505050565b6080820160008201516137cc6000850182613135565b5060208201516137df6040850182613135565b50505050565b6080820160008201516137fb6000850182613135565b50602082015161380e6040850182613135565b50505050565b6101008201600082015161382b6000850182613758565b50602082015161383e60408501826137b6565b50604082015161385160c0850182613758565b50505050565b61386081613da7565b82525050565b61386f81613da7565b82525050565b600060208201905061388a60008301846130cf565b92915050565b60006020820190506138a560008301846130c0565b92915050565b60006080820190506138c060008301876130c0565b6138cd60208301866130cf565b6138da6040830185613866565b81810360608301526138ec81846131aa565b905095945050505050565b600060608201905061390c60008301866130cf565b6139196020830185613866565b613926604083018461319b565b949350505050565b6000602082019050613943600083018461318c565b92915050565b6000602082019050818103600083015261396381846131e3565b905092915050565b600060208201905081810360008301526139848161321c565b9050919050565b600060208201905081810360008301526139a48161325c565b9050919050565b600060208201905081810360008301526139c4816132c2565b9050919050565b600060208201905081810360008301526139e481613328565b9050919050565b60006020820190508181036000830152613a048161338e565b9050919050565b60006020820190508181036000830152613a24816133f4565b9050919050565b60006020820190508181036000830152613a448161345a565b9050919050565b60006020820190508181036000830152613a64816134c0565b9050919050565b60006020820190508181036000830152613a8481613500565b9050919050565b60006020820190508181036000830152613aa481613566565b9050919050565b60006020820190508181036000830152613ac4816135cc565b9050919050565b60006020820190508181036000830152613ae48161360c565b9050919050565b60006020820190508181036000830152613b0481613672565b9050919050565b60006020820190508181036000830152613b24816136b2565b9050919050565b60006020820190508181036000830152613b4481613718565b9050919050565b600061014082019050613b616000830187613787565b613b6e60408301866137e5565b613b7b60c0830185613787565b613b896101008301846130de565b95945050505050565b600061014082019050613ba86000830185613814565b613bb66101008301846130de565b9392505050565b6000602082019050613bd26000830184613866565b92915050565b6000604051905081810181811067ffffffffffffffff82111715613bfb57600080fd5b8060405250919050565b600067ffffffffffffffff821115613c1c57600080fd5b602082029050919050565b600067ffffffffffffffff821115613c3e57600080fd5b602082029050919050565b600067ffffffffffffffff821115613c6057600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613c8c57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060029050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600081905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000613d3e82613d87565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000613dbc82613dc3565b9050919050565b6000613dce82613dd5565b9050919050565b6000613de082613d87565b9050919050565b82818337600083830152505050565b60005b83811015613e14578082015181840152602081019050613df9565b83811115613e23576000848401525b50505050565b6000601f19601f8301169050919050565b613e4381613d33565b8114613e4e57600080fd5b50565b613e5a81613d45565b8114613e6557600080fd5b50565b613e7181613d51565b8114613e7c57600080fd5b50565b613e8881613d5b565b8114613e9357600080fd5b50565b613e9f81613da7565b8114613eaa57600080fd5b5056fea365627a7a7231582039d025de4adf55f18f22ce7f3de160d82d729bab167be2c9f72136e98e528cc06c6578706572696d656e74616cf564736f6c63430005100040",
  "sourceMap": "131:1382:12:-;;;426:246;8:9:-1;5:2;;;30:1;27;20:12;5:2;426:246:12;;;;;;;;;;;;;;;;;;;;;;;;17326:170:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17454:4;17460:6;17468:12;698:17:5;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;767:5:11;757:7;;:15;;;;;;;;;;;;;;;;;;718:40:2;385:10;737:20;;718:18;;;:40;;:::i;:::-;2090::8;1964:10;2109:20;;2090:18;;;:40;;:::i;:::-;8998:51;8604:10;9017:31;;8998:18;;;:51;;:::i;:::-;16271:4;16263:5;:12;;;;;;;;;;;;:::i;:::-;;16295:6;16285:7;:16;;;;;;;;;;;;:::i;:::-;;16327:12;16311:13;:28;;;;;;;;;;;;:::i;:::-;;16350:49;15974:10;16369:29;;16350:18;;;:49;;:::i;:::-;16163:243;;;17326:170;;;648:16:12;621:9;;:44;;;;;;;;;;;;;;;;;;426:246;131:1382;;788:96:0;833:15;867:10;860:17;;788:96;:::o;1442:190:2:-;1532:10;1517:25;;:11;:25;;;;;1509:66;;;;;;;;;;;;;;;;;;;;;;1621:4;1585:20;:33;1606:11;1585:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1442:190;:::o;131:1382:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:134:-1:-;;89:6;83:13;74:22;;101:33;128:5;101:33;;;68:71;;;;;146:263;;261:2;249:9;240:7;236:23;232:32;229:2;;;277:1;274;267:12;229:2;312:1;329:64;385:7;376:6;365:9;361:22;329:64;;;319:74;;291:108;223:186;;;;;417:328;;577:67;641:2;636:3;577:67;;;570:74;;677:30;673:1;668:3;664:11;657:51;736:2;731:3;727:12;720:19;;563:182;;;;753:407;;944:2;933:9;929:18;921:26;;994:9;988:4;984:20;980:1;969:9;965:17;958:47;1019:131;1145:4;1019:131;;;1011:139;;915:245;;;;1168:163;;1283:6;1278:3;1271:19;1320:4;1315:3;1311:14;1296:29;;1264:67;;;;;1339:91;;1401:24;1419:5;1401:24;;;1390:35;;1384:46;;;;1437:121;;1510:42;1503:5;1499:54;1488:65;;1482:76;;;;1565:117;1634:24;1652:5;1634:24;;;1627:5;1624:35;1614:2;;1673:1;1670;1663:12;1614:2;1608:74;;131:1382:12;;;;;;;",
  "deployedSourceMap": "131:1382:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;131:1382:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;16412:83:8;;;:::i;:::-;;;;;;;;;;;;;;;;3088:184;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2659:423;;;;;;;;;;;;;;;;:::i;:::-;;9763:94;;;:::i;:::-;;;;;;;;;;;;;;;;4249:180;;;;;;;;;;;;;;;;:::i;:::-;;14801:127:10;;;;;;;;;;;;;;;;:::i;:::-;;9429:182:8;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14934:171:10;;;;;;;;;;;;;;;;:::i;:::-;;1606:116:11;;;:::i;:::-;;4435:132:8;;;;;;;;;;;;;;;;:::i;:::-;;10194:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;874:76:11;;;:::i;:::-;;;;;;;;;;;;;;;;994:314:12;;;;;;;;;;;;;;;;:::i;:::-;;2359:210:8;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2143;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1684:137:5;;;:::i;:::-;;1417:114:11;;;:::i;:::-;;899:77:5;;;:::i;:::-;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;16501:87:8;;;:::i;:::-;;;;;;;;;;;;;;;;3564:213;;;;;;;;;;;;;;;;:::i;:::-;;4573:211;;;;;;;;;;;;;;;;:::i;:::-;;16699:370;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;17796:196;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;16594:99;;;:::i;:::-;;;;;;;;;;;;;;;;4098:145;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1970:107:5;;;;;;;;;;;;;;;;:::i;:::-;;915:133:2;985:4;1008:20;:33;1029:11;1008:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1001:40;;915:133;;;:::o;16412:83:8:-;16451:13;16483:5;16476:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16412:83;:::o;3088:184::-;3147:7;3174:16;3182:7;3174;:16::i;:::-;3166:57;;;;;;;;;;;;;;;;;;;;;;3241:15;:24;3257:7;3241:24;;;;;;;;;;;;;;;;;;;;;3234:31;;3088:184;;;:::o;2659:423::-;2722:13;2738:16;2746:7;2738;:16::i;:::-;2722:32;;2778:5;2772:11;;:2;:11;;;;2764:64;;;;;;;;;;;;;;;;;;;;;;2863:5;2847:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;2872:37;2889:5;2896:12;:10;:12::i;:::-;2872:16;:37::i;:::-;2847:62;2839:153;;;;;;;;;;;;;;;;;;;;;;3030:2;3003:15;:24;3019:7;3003:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3067:7;3063:2;3047:28;;3056:5;3047:28;;;;;;;;;;;;2659:423;;;:::o;9763:94::-;9807:7;9833:10;:17;;;;9826:24;;9763:94;:::o;4249:180::-;4339:39;4358:10;4370:7;4339:18;:39::i;:::-;4331:48;;;;;;4390:32;4404:4;4410:2;4414:7;4390:13;:32::i;:::-;4249:180;;;:::o;14801:127:10:-;14881:40;14892:5;14899:7;14918:1;14908:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14908:12:10;;;;14881:10;:40::i;:::-;14801:127;;:::o;9429:182:8:-;9509:7;9544:16;9554:5;9544:9;:16::i;:::-;9536:5;:24;9528:33;;;;;;9578:12;:19;9591:5;9578:19;;;;;;;;;;;;;;;9598:5;9578:26;;;;;;;;;;;;;;;;9571:33;;9429:182;;;;:::o;14934:171:10:-;;;;:::o;1606:116:11:-;1103:9:5;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;1294:7:11;;;;;;;;;;;1286:40;;;;;;;;;;;;;;;;;;;;;;1673:5;1663:7;;:15;;;;;;;;;;;;;;;;;;1693:22;1702:12;:10;:12::i;:::-;1693:22;;;;;;;;;;;;;;;1606:116::o;4435:132:8:-;4521:39;4538:4;4544:2;4548:7;4521:39;;;;;;;;;;;;:16;:39::i;:::-;4435:132;;;:::o;10194:148::-;10252:7;10287:13;:11;:13::i;:::-;10279:5;:21;10271:30;;;;;;10318:10;10329:5;10318:17;;;;;;;;;;;;;;;;10311:24;;10194:148;;;:::o;874:76:11:-;913:4;936:7;;;;;;;;;;;929:14;;874:76;:::o;994:314:12:-;1120:9;;;;;;;;;;;:18;;;1139:5;1146:6;1120:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1120:33:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1120:33:12;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1120:33:12;;;;;;;;;1112:87;;;;;;;;;;;;;;;;;;;;;;1210:54;1222:2;1226:7;1235:28;1249:5;1256:6;1235:13;:28::i;:::-;1210:11;:54::i;:::-;1274:27;1285:2;1289:7;1274:27;;;;;;;;;;;;:10;:27::i;:::-;;994:314;;;;:::o;2359:210:8:-;2414:7;2433:13;2449:11;:20;2461:7;2449:20;;;;;;;;;;;;;;;;;;;;;2433:36;;2504:1;2487:19;;:5;:19;;;;2479:60;;;;;;;;;;;;;;;;;;;;;;2557:5;2550:12;;;2359:210;;;:::o;2143:::-;2198:7;2242:1;2225:19;;:5;:19;;;;2217:77;;;;;;;;;;;;;;;;;;;;;;2312:34;:17;:24;2330:5;2312:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2305:41;;2143:210;;;:::o;1684:137:5:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;1417:114:11:-;1103:9:5;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;1103:7:11;;;;;;;;;;;1102:8;1094:37;;;;;;;;;;;;;;;;;;;;;;1485:4;1475:7;;:14;;;;;;;;;;;;;;;;;;1504:20;1511:12;:10;:12::i;:::-;1504:20;;;;;;;;;;;;;;;1417:114::o;899:77:5:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;16501:87:8:-;16542:13;16574:7;16567:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16501:87;:::o;3564:213::-;3649:10;3643:16;;:2;:16;;;;3635:25;;;;;;3707:8;3670:18;:30;3689:10;3670:30;;;;;;;;;;;;;;;:34;3701:2;3670:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;3757:2;3730:40;;3745:10;3730:40;;;3761:8;3730:40;;;;;;;;;;;;;;;3564:213;;:::o;4573:211::-;4679:31;4692:4;4698:2;4702:7;4679:12;:31::i;:::-;4728:48;4751:4;4757:2;4761:7;4770:5;4728:22;:48::i;:::-;4720:57;;;;;;4573:211;;;;:::o;16699:370::-;16757:13;16790:16;16798:7;16790;:16::i;:::-;16782:65;;;;;;;;;;;;;;;;;;;;;;16858:23;16884:10;:19;16895:7;16884:19;;;;;;;;;;;16858:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16945:1;16924:9;16918:23;:28;16914:88;;;16974:17;16983:7;16974:8;:17::i;:::-;16962:29;;16914:88;17026:35;17036:13;17026:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17051:9;17026;:35::i;:::-;17012:50;;;16699:370;;;:::o;17796:196::-;17889:4;1103:9:5;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;17905:18:8;17911:2;17915:7;17905:5;:18::i;:::-;17933:31;17946:7;17955:8;17933:12;:31::i;:::-;17981:4;17974:11;;17796:196;;;;;:::o;16594:99::-;16641:13;16673;16666:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16594:99;:::o;4098:145::-;4178:4;4201:18;:25;4220:5;4201:25;;;;;;;;;;;;;;;:35;4227:8;4201:35;;;;;;;;;;;;;;;;;;;;;;;;;4194:42;;4098:145;;;;:::o;1970:107:5:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;4978:152:8:-;5035:4;5051:13;5067:11;:20;5079:7;5067:20;;;;;;;;;;;;;;;;;;;;;5051:36;;5121:1;5104:19;;:5;:19;;;;5097:26;;;4978:152;;;:::o;788:96:0:-;833:15;867:10;860:17;;788:96;:::o;5490:246:8:-;5575:4;5591:13;5607:16;5615:7;5607;:16::i;:::-;5591:32;;5652:5;5641:16;;:7;:16;;;:51;;;;5685:7;5661:31;;:20;5673:7;5661:11;:20::i;:::-;:31;;;5641:51;:87;;;;5696:32;5713:5;5720:7;5696:16;:32::i;:::-;5641:87;5633:96;;;5490:246;;;;:::o;10717:239::-;10802:38;10822:4;10828:2;10832:7;10802:19;:38::i;:::-;10851:47;10884:4;10890:7;10851:32;:47::i;:::-;10909:40;10937:2;10941:7;10909:27;:40::i;:::-;10717:239;;;:::o;1314:197:12:-;1418:7;1469:5;:7;;;1478:5;:7;;;1487:5;:7;;;1496:6;1458:45;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1458:45:12;;;1448:56;;;;;;1441:63;;1314:197;;;;:::o;678:310::-;810:1;774:38;;:10;:21;785:9;774:21;;;;;;;;;;;:24;;;;;;;;;;;;:38;;;766:92;;;;;;;;;;;;;;;;;;;;;;892:36;;;;;;;;906:2;892:36;;;;;;919:7;892:36;;;869:10;:21;880:9;869:21;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;944:37;958:2;962:7;971:9;944:37;;;;;;;;;;;;;;;;;678:310;;;:::o;1065:112:1:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;7452:343:8:-;7569:4;7594:15;:2;:13;;;:15::i;:::-;7589:58;;7632:4;7625:11;;;;7589:58;7657:13;7689:2;7673:36;;;7710:10;7722:4;7728:7;7737:5;7673:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7673:70:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7673:70:8;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;7673:70:8;;;;;;;;;7657:86;;1102:10;7771:16;;7761:26;;;:6;:26;;;;7753:35;;;7452:343;;;;;;;:::o;43281:465:10:-;43331:27;43380:1;43374:2;:7;43370:48;;;43397:10;;;;;;;;;;;;;;;;;;;;;43370:48;43427:6;43436:2;43427:11;;43448:8;43466:66;43478:1;43473;:6;43466:66;;43495:5;;;;;;;43519:2;43514:7;;;;;;;;;43466:66;;;43541:17;43571:3;43561:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43561:14:10;;;;43541:34;;43585:6;43600:1;43594:3;:7;43585:16;;43611:100;43624:1;43618:2;:7;43611:100;;43674:2;43669;:7;;;;;;43664:2;:12;43653:25;;43641:4;43646:3;;;;;;;43641:9;;;;;;;;;;;:37;;;;;;;;;;;43698:2;43692:8;;;;;;;;;43611:100;;;43734:4;43720:19;;;;;;43281:465;;;;:::o;39722:166::-;39800:33;39852:29;39862:2;39866;39852:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39845:36;;39722:166;;;;:::o;11211:196:8:-;11274:24;11286:2;11290:7;11274:11;:24::i;:::-;11309:40;11337:2;11341:7;11309:27;:40::i;:::-;11360;11392:7;11360:31;:40::i;:::-;11211:196;;:::o;17075:::-;17166:16;17174:7;17166;:16::i;:::-;17158:65;;;;;;;;;;;;;;;;;;;;;;17255:9;17233:10;:19;17244:7;17233:19;;;;;;;;;;;:31;;;;;;;;;;;;:::i;:::-;;17075:196;;:::o;2178:225:5:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;6440:484:8:-;1103:7:11;;;;;;;;;;;1102:8;1094:37;;;;;;;;;;;;;;;;;;;;;;6568:4:8;6548:24;;:16;6556:7;6548;:16::i;:::-;:24;;;6540:92;;;;;;;;;;;;;;;;;;;;;;6664:1;6650:16;;:2;:16;;;;6642:73;;;;;;;;;;;;;;;;;;;;;;6726:23;6741:7;6726:14;:23::i;:::-;6760:35;:17;:23;6778:4;6760:23;;;;;;;;;;;;;;;:33;:35::i;:::-;6805:33;:17;:21;6823:2;6805:21;;;;;;;;;;;;;;;:31;:33::i;:::-;6872:2;6849:11;:20;6861:7;6849:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;6909:7;6905:2;6890:27;;6899:4;6890:27;;;;;;;;;;;;6440:484;;;:::o;13183:1152::-;13445:22;13470:32;13500:1;13470:12;:18;13483:4;13470:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;13445:57;;13512:18;13533:17;:26;13551:7;13533:26;;;;;;;;;;;;13512:47;;13677:14;13663:10;:28;13659:347;;13707:19;13729:12;:18;13742:4;13729:18;;;;;;;;;;;;;;;13748:14;13729:34;;;;;;;;;;;;;;;;13707:56;;13811:11;13778:12;:18;13791:4;13778:18;;;;;;;;;;;;;;;13797:10;13778:30;;;;;;;;;;;;;;;:44;;;;13939:10;13906:17;:30;13924:11;13906:30;;;;;;;;;;;:43;;;;13659:347;;14092:12;:18;14105:4;14092:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;13183:1152;;;;:::o;12029:183::-;12142:12;:16;12155:2;12142:16;;;;;;;;;;;;;;;:23;;;;12113:17;:26;12131:7;12113:26;;;;;;;;;;;:52;;;;12175:12;:16;12188:2;12175:16;;;;;;;;;;;;;;;12197:7;12175:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;12175:30:8;;;;;;;;;;;;;;;;;;;;;;12029:183;;:::o;686:610:7:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;40292:1020:10:-;40424:33;40469:16;40494:2;40469:28;;40507:16;40532:2;40507:28;;40545:16;40570:2;40545:28;;40583:16;40608:2;40583:28;;40621:16;40646:2;40621:28;;40659:19;40744:3;:10;40731:3;:10;40718:3;:10;40705:3;:10;40692:3;:10;:23;:36;:49;:62;40681:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40681:74:10;;;;40659:96;;40765:19;40793:5;40765:34;;40809:6;40818:1;40809:10;;40829:6;40838:1;40829:10;;40858:1;40854:5;;40849:78;40865:3;:10;40861:1;:14;40849:78;;;40910:3;40914:1;40910:6;;;;;;;;;;;;;;;;40896;40903:3;;;;;;40896:11;;;;;;;;;;;:20;;;;;;;;;;;40877:3;;;;;;;40849:78;;;40945:1;40941:5;;40936:78;40952:3;:10;40948:1;:14;40936:78;;;40997:3;41001:1;40997:6;;;;;;;;;;;;;;;;40983;40990:3;;;;;;40983:11;;;;;;;;;;;:20;;;;;;;;;;;40964:3;;;;;;;40936:78;;;41032:1;41028:5;;41023:78;41039:3;:10;41035:1;:14;41023:78;;;41084:3;41088:1;41084:6;;;;;;;;;;;;;;;;41070;41077:3;;;;;;41070:11;;;;;;;;;;;:20;;;;;;;;;;;41051:3;;;;;;;41023:78;;;41119:1;41115:5;;41110:78;41126:3;:10;41122:1;:14;41110:78;;;41171:3;41175:1;41171:6;;;;;;;;;;;;;;;;41157;41164:3;;;;;;41157:11;;;;;;;;;;;:20;;;;;;;;;;;41138:3;;;;;;;41110:78;;;41206:1;41202:5;;41197:78;41213:3;:10;41209:1;:14;41197:78;;;41258:3;41262:1;41258:6;;;;;;;;;;;;;;;;41244;41251:3;;;;;;41244:11;;;;;;;;;;;:20;;;;;;;;;;;41225:3;;;;;;;41197:78;;;41298:6;41284:21;;;;;;;;;;;40292:1020;;;;;;;:::o;5893:348:8:-;1103:7:11;;;;;;;;;;;1102:8;1094:37;;;;;;;;;;;;;;;;;;;;;;5991:1:8;5977:16;;:2;:16;;;;5969:69;;;;;;;;;;;;;;;;;;;;;;6057:16;6065:7;6057;:16::i;:::-;6056:17;6048:58;;;;;;;;;;;;;;;;;;;;;;6140:2;6117:11;:20;6129:7;6117:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;6152:33;:17;:21;6170:2;6152:21;;;;;;;;;;;;;;;:31;:33::i;:::-;6226:7;6222:2;6201:33;;6218:1;6201:33;;;;;;;;;;;;5893:348;;:::o;12407:161::-;12510:10;:17;;;;12483:15;:24;12499:7;12483:24;;;;;;;;;;;:44;;;;12537:10;12553:7;12537:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;12537:24:8;;;;;;;;;;;;;;;;;;;;;;12407:161;:::o;7876:171::-;7975:1;7939:38;;:15;:24;7955:7;7939:24;;;;;;;;;;;;;;;;;;;;;:38;;;7935:106;;8028:1;7993:15;:24;8009:7;7993:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;7935:106;7876:171;:::o;1367:108:1:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:4:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;131:1382:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;161:608;;272:3;265:4;257:6;253:17;249:27;239:2;;290:1;287;280:12;239:2;314:4;333:74;348:58;399:6;348:58;;;333:74;;;324:83;;424:5;483:6;530:3;522:4;514:6;510:17;505:3;501:27;498:36;495:2;;;547:1;544;537:12;495:2;572:1;557:206;582:6;579:1;576:13;557:206;;;640:3;662:37;695:3;683:10;662:37;;;657:3;650:50;723:4;718:3;714:14;707:21;;751:4;746:3;742:14;735:21;;614:149;604:1;601;597:9;592:14;;557:206;;;561:14;232:537;;;;;;;;796:616;;911:3;904:4;896:6;892:17;888:27;878:2;;929:1;926;919:12;878:2;953:4;972:78;987:62;1042:6;987:62;;;972:78;;;963:87;;1067:5;1126:6;1173:3;1165:4;1157:6;1153:17;1148:3;1144:27;1141:36;1138:2;;;1190:1;1187;1180:12;1138:2;1215:1;1200:206;1225:6;1222:1;1219:13;1200:206;;;1283:3;1305:37;1338:3;1326:10;1305:37;;;1300:3;1293:50;1366:4;1361:3;1357:14;1350:21;;1394:4;1389:3;1385:14;1378:21;;1257:149;1247:1;1244;1240:9;1235:14;;1200:206;;;1204:14;871:541;;;;;;;;1420:124;;1497:6;1484:20;1475:29;;1509:30;1533:5;1509:30;;;1469:75;;;;;1551:128;;1632:6;1626:13;1617:22;;1644:30;1668:5;1644:30;;;1611:68;;;;;1686:130;;1766:6;1753:20;1744:29;;1778:33;1805:5;1778:33;;;1738:78;;;;;1823:128;;1902:6;1889:20;1880:29;;1914:32;1940:5;1914:32;;;1874:77;;;;;1958:132;;2041:6;2035:13;2026:22;;2053:32;2079:5;2053:32;;;2020:70;;;;;2098:440;;2199:3;2192:4;2184:6;2180:17;2176:27;2166:2;;2217:1;2214;2207:12;2166:2;2254:6;2241:20;2276:64;2291:48;2332:6;2291:48;;;2276:64;;;2267:73;;2360:6;2353:5;2346:21;2396:4;2388:6;2384:17;2429:4;2422:5;2418:16;2464:3;2455:6;2450:3;2446:16;2443:25;2440:2;;;2481:1;2478;2471:12;2440:2;2491:41;2525:6;2520:3;2515;2491:41;;;2159:379;;;;;;;;2547:442;;2649:3;2642:4;2634:6;2630:17;2626:27;2616:2;;2667:1;2664;2657:12;2616:2;2704:6;2691:20;2726:65;2741:49;2783:6;2741:49;;;2726:65;;;2717:74;;2811:6;2804:5;2797:21;2847:4;2839:6;2835:17;2880:4;2873:5;2869:16;2915:3;2906:6;2901:3;2897:16;2894:25;2891:2;;;2932:1;2929;2922:12;2891:2;2942:41;2976:6;2971:3;2966;2942:41;;;2609:380;;;;;;;;3026:457;;3136:4;3124:9;3119:3;3115:19;3111:30;3108:2;;;3154:1;3151;3144:12;3108:2;3172:20;3187:4;3172:20;;;3163:29;;3239:1;3271:49;3316:3;3307:6;3296:9;3292:22;3271:49;;;3264:4;3257:5;3253:16;3246:75;3202:130;3379:2;3412:49;3457:3;3448:6;3437:9;3433:22;3412:49;;;3405:4;3398:5;3394:16;3387:75;3342:131;3102:381;;;;;3519:495;;3629:4;3617:9;3612:3;3608:19;3604:30;3601:2;;;3647:1;3644;3637:12;3601:2;3665:20;3680:4;3665:20;;;3656:29;;3732:1;3764:68;3828:3;3819:6;3808:9;3804:22;3764:68;;;3757:4;3750:5;3746:16;3739:94;3695:149;3891:2;3924:68;3988:3;3979:6;3968:9;3964:22;3924:68;;;3917:4;3910:5;3906:16;3899:94;3854:150;3595:419;;;;;4055:666;;4167:6;4155:9;4150:3;4146:19;4142:32;4139:2;;;4187:1;4184;4177:12;4139:2;4205:20;4220:4;4205:20;;;4196:29;;4272:1;4304:70;4370:3;4361:6;4350:9;4346:22;4304:70;;;4297:4;4290:5;4286:16;4279:96;4235:151;4433:2;4466:70;4532:3;4523:6;4512:9;4508:22;4466:70;;;4459:4;4452:5;4448:16;4441:96;4396:152;4595:3;4629:70;4695:3;4686:6;4675:9;4671:22;4629:70;;;4622:4;4615:5;4611:16;4604:96;4558:153;4133:588;;;;;4728:130;;4808:6;4795:20;4786:29;;4820:33;4847:5;4820:33;;;4780:78;;;;;4865:241;;4969:2;4957:9;4948:7;4944:23;4940:32;4937:2;;;4985:1;4982;4975:12;4937:2;5020:1;5037:53;5082:7;5073:6;5062:9;5058:22;5037:53;;;5027:63;;4999:97;4931:175;;;;;5113:366;;;5234:2;5222:9;5213:7;5209:23;5205:32;5202:2;;;5250:1;5247;5240:12;5202:2;5285:1;5302:53;5347:7;5338:6;5327:9;5323:22;5302:53;;;5292:63;;5264:97;5392:2;5410:53;5455:7;5446:6;5435:9;5431:22;5410:53;;;5400:63;;5371:98;5196:283;;;;;;5486:491;;;;5624:2;5612:9;5603:7;5599:23;5595:32;5592:2;;;5640:1;5637;5630:12;5592:2;5675:1;5692:53;5737:7;5728:6;5717:9;5713:22;5692:53;;;5682:63;;5654:97;5782:2;5800:53;5845:7;5836:6;5825:9;5821:22;5800:53;;;5790:63;;5761:98;5890:2;5908:53;5953:7;5944:6;5933:9;5929:22;5908:53;;;5898:63;;5869:98;5586:391;;;;;;5984:721;;;;;6148:3;6136:9;6127:7;6123:23;6119:33;6116:2;;;6165:1;6162;6155:12;6116:2;6200:1;6217:53;6262:7;6253:6;6242:9;6238:22;6217:53;;;6207:63;;6179:97;6307:2;6325:53;6370:7;6361:6;6350:9;6346:22;6325:53;;;6315:63;;6286:98;6415:2;6433:53;6478:7;6469:6;6458:9;6454:22;6433:53;;;6423:63;;6394:98;6551:2;6540:9;6536:18;6523:32;6575:18;6567:6;6564:30;6561:2;;;6607:1;6604;6597:12;6561:2;6627:62;6681:7;6672:6;6661:9;6657:22;6627:62;;;6617:72;;6502:193;6110:595;;;;;;;;6712:360;;;6830:2;6818:9;6809:7;6805:23;6801:32;6798:2;;;6846:1;6843;6836:12;6798:2;6881:1;6898:53;6943:7;6934:6;6923:9;6919:22;6898:53;;;6888:63;;6860:97;6988:2;7006:50;7048:7;7039:6;7028:9;7024:22;7006:50;;;6996:60;;6967:95;6792:280;;;;;;7079:366;;;7200:2;7188:9;7179:7;7175:23;7171:32;7168:2;;;7216:1;7213;7206:12;7168:2;7251:1;7268:53;7313:7;7304:6;7293:9;7289:22;7268:53;;;7258:63;;7230:97;7358:2;7376:53;7421:7;7412:6;7401:9;7397:22;7376:53;;;7366:63;;7337:98;7162:283;;;;;;7452:597;;;;7600:2;7588:9;7579:7;7575:23;7571:32;7568:2;;;7616:1;7613;7606:12;7568:2;7651:1;7668:53;7713:7;7704:6;7693:9;7689:22;7668:53;;;7658:63;;7630:97;7758:2;7776:53;7821:7;7812:6;7801:9;7797:22;7776:53;;;7766:63;;7737:98;7894:2;7883:9;7879:18;7866:32;7918:18;7910:6;7907:30;7904:2;;;7950:1;7947;7940:12;7904:2;7970:63;8025:7;8016:6;8005:9;8001:22;7970:63;;;7960:73;;7845:194;7562:487;;;;;;8056:710;;;;;8257:3;8245:9;8236:7;8232:23;8228:33;8225:2;;;8274:1;8271;8264:12;8225:2;8309:1;8326:53;8371:7;8362:6;8351:9;8347:22;8326:53;;;8316:63;;8288:97;8416:2;8434:53;8479:7;8470:6;8459:9;8455:22;8434:53;;;8424:63;;8395:98;8524:2;8542:76;8610:7;8601:6;8590:9;8586:22;8542:76;;;8532:86;;8503:121;8655:3;8674:76;8742:7;8733:6;8722:9;8718:22;8674:76;;;8664:86;;8634:122;8219:547;;;;;;;;8773:257;;8885:2;8873:9;8864:7;8860:23;8856:32;8853:2;;;8901:1;8898;8891:12;8853:2;8936:1;8953:61;9006:7;8997:6;8986:9;8982:22;8953:61;;;8943:71;;8915:105;8847:183;;;;;9037:472;;;9168:2;9156:9;9147:7;9143:23;9139:32;9136:2;;;9184:1;9181;9174:12;9136:2;9219:1;9236:53;9281:7;9272:6;9261:9;9257:22;9236:53;;;9226:63;;9198:97;9354:2;9343:9;9339:18;9326:32;9378:18;9370:6;9367:30;9364:2;;;9410:1;9407;9400:12;9364:2;9430:63;9485:7;9476:6;9465:9;9461:22;9430:63;;;9420:73;;9305:194;9130:379;;;;;;9516:701;;;;9673:2;9661:9;9652:7;9648:23;9644:32;9641:2;;;9689:1;9686;9679:12;9641:2;9724:1;9741:53;9786:7;9777:6;9766:9;9762:22;9741:53;;;9731:63;;9703:97;9859:2;9848:9;9844:18;9831:32;9883:18;9875:6;9872:30;9869:2;;;9915:1;9912;9905:12;9869:2;9935:63;9990:7;9981:6;9970:9;9966:22;9935:63;;;9925:73;;9810:194;10063:2;10052:9;10048:18;10035:32;10087:18;10079:6;10076:30;10073:2;;;10119:1;10116;10109:12;10073:2;10139:62;10193:7;10184:6;10173:9;10169:22;10139:62;;;10129:72;;10014:193;9635:582;;;;;;10224:239;;10327:2;10315:9;10306:7;10302:23;10298:32;10295:2;;;10343:1;10340;10333:12;10295:2;10378:1;10395:52;10439:7;10430:6;10419:9;10415:22;10395:52;;;10385:62;;10357:96;10289:174;;;;;10470:261;;10584:2;10572:9;10563:7;10559:23;10555:32;10552:2;;;10600:1;10597;10590:12;10552:2;10635:1;10652:63;10707:7;10698:6;10687:9;10683:22;10652:63;;;10642:73;;10614:107;10546:185;;;;;10738:241;;10842:2;10830:9;10821:7;10817:23;10813:32;10810:2;;;10858:1;10855;10848:12;10810:2;10893:1;10910:53;10955:7;10946:6;10935:9;10931:22;10910:53;;;10900:63;;10872:97;10804:175;;;;;10987:173;;11074:46;11116:3;11108:6;11074:46;;;11149:4;11144:3;11140:14;11126:28;;11067:93;;;;;11168:142;11259:45;11298:5;11259:45;;;11254:3;11247:58;11241:69;;;11317:113;11400:24;11418:5;11400:24;;;11395:3;11388:37;11382:48;;;11470:660;11603:52;11649:5;11603:52;;;11668:84;11745:6;11740:3;11668:84;;;11661:91;;11773:54;11821:5;11773:54;;;11847:7;11875:1;11860:258;11885:6;11882:1;11879:13;11860:258;;;11952:6;11946:13;11973:63;12032:3;12017:13;11973:63;;;11966:70;;12053:58;12104:6;12053:58;;;12043:68;;11917:201;11907:1;11904;11900:9;11895:14;;11860:258;;;11864:14;11582:548;;;;;;12171:624;12290:48;12332:5;12290:48;;;12351:74;12418:6;12413:3;12351:74;;;12344:81;;12446:50;12490:5;12446:50;;;12516:7;12544:1;12529:254;12554:6;12551:1;12548:13;12529:254;;;12621:6;12615:13;12642:63;12701:3;12686:13;12642:63;;;12635:70;;12722:54;12769:6;12722:54;;;12712:64;;12586:197;12576:1;12573;12569:9;12564:14;;12529:254;;;12533:14;12269:526;;;;;;12803:104;12880:21;12895:5;12880:21;;;12875:3;12868:34;12862:45;;;12914:113;12997:24;13015:5;12997:24;;;12992:3;12985:37;12979:48;;;13034:343;;13144:38;13176:5;13144:38;;;13194:70;13257:6;13252:3;13194:70;;;13187:77;;13269:52;13314:6;13309:3;13302:4;13295:5;13291:16;13269:52;;;13342:29;13364:6;13342:29;;;13337:3;13333:39;13326:46;;13124:253;;;;;;13384:347;;13496:39;13529:5;13496:39;;;13547:71;13611:6;13606:3;13547:71;;;13540:78;;13623:52;13668:6;13663:3;13656:4;13649:5;13645:16;13623:52;;;13696:29;13718:6;13696:29;;;13691:3;13687:39;13680:46;;13476:255;;;;;;13739:320;;13899:67;13963:2;13958:3;13899:67;;;13892:74;;13999:22;13995:1;13990:3;13986:11;13979:43;14050:2;14045:3;14041:12;14034:19;;13885:174;;;;14068:377;;14228:67;14292:2;14287:3;14228:67;;;14221:74;;14328:34;14324:1;14319:3;14315:11;14308:55;14397:10;14392:2;14387:3;14383:12;14376:32;14436:2;14431:3;14427:12;14420:19;;14214:231;;;;14454:377;;14614:67;14678:2;14673:3;14614:67;;;14607:74;;14714:34;14710:1;14705:3;14701:11;14694:55;14783:10;14778:2;14773:3;14769:12;14762:32;14822:2;14817:3;14813:12;14806:19;;14600:231;;;;14840:392;;15000:67;15064:2;15059:3;15000:67;;;14993:74;;15100:34;15096:1;15091:3;15087:11;15080:55;15169:25;15164:2;15159:3;15155:12;15148:47;15223:2;15218:3;15214:12;15207:19;;14986:246;;;;15241:378;;15401:67;15465:2;15460:3;15401:67;;;15394:74;;15501:34;15497:1;15492:3;15488:11;15481:55;15570:11;15565:2;15560:3;15556:12;15549:33;15610:2;15605:3;15601:12;15594:19;;15387:232;;;;15628:375;;15788:67;15852:2;15847:3;15788:67;;;15781:74;;15888:34;15884:1;15879:3;15875:11;15868:55;15957:8;15952:2;15947:3;15943:12;15936:30;15994:2;15989:3;15985:12;15978:19;;15774:229;;;;16012:381;;16172:67;16236:2;16231:3;16172:67;;;16165:74;;16272:34;16268:1;16263:3;16259:11;16252:55;16341:14;16336:2;16331:3;16327:12;16320:36;16384:2;16379:3;16375:12;16368:19;;16158:235;;;;16402:328;;16562:67;16626:2;16621:3;16562:67;;;16555:74;;16662:30;16658:1;16653:3;16649:11;16642:51;16721:2;16716:3;16712:12;16705:19;;16548:182;;;;16739:394;;16899:67;16963:2;16958:3;16899:67;;;16892:74;;16999:34;16995:1;16990:3;16986:11;16979:55;17068:27;17063:2;17058:3;17054:12;17047:49;17124:2;17119:3;17115:12;17108:19;;16885:248;;;;17142:373;;17302:67;17366:2;17361:3;17302:67;;;17295:74;;17402:34;17398:1;17393:3;17389:11;17382:55;17471:6;17466:2;17461:3;17457:12;17450:28;17506:2;17501:3;17497:12;17490:19;;17288:227;;;;17524:316;;17684:67;17748:2;17743:3;17684:67;;;17677:74;;17784:18;17780:1;17775:3;17771:11;17764:39;17831:2;17826:3;17822:12;17815:19;;17670:170;;;;17849:378;;18009:67;18073:2;18068:3;18009:67;;;18002:74;;18109:34;18105:1;18100:3;18096:11;18089:55;18178:11;18173:2;18168:3;18164:12;18157:33;18218:2;18213:3;18209:12;18202:19;;17995:232;;;;18236:332;;18396:67;18460:2;18455:3;18396:67;;;18389:74;;18496:34;18492:1;18487:3;18483:11;18476:55;18559:2;18554:3;18550:12;18543:19;;18382:186;;;;18577:382;;18737:67;18801:2;18796:3;18737:67;;;18730:74;;18837:34;18833:1;18828:3;18824:11;18817:55;18906:15;18901:2;18896:3;18892:12;18885:37;18950:2;18945:3;18941:12;18934:19;;18723:236;;;;18968:328;;19128:67;19192:2;19187:3;19128:67;;;19121:74;;19228:30;19224:1;19219:3;19215:11;19208:51;19287:2;19282:3;19278:12;19271:19;;19114:182;;;;19359:456;19488:4;19483:3;19479:14;19568:4;19561:5;19557:16;19551:23;19580:63;19637:4;19632:3;19628:14;19614:12;19580:63;;;19508:141;19719:4;19712:5;19708:16;19702:23;19731:63;19788:4;19783:3;19779:14;19765:12;19731:63;;;19659:141;19461:354;;;;19877:466;20016:4;20011:3;20007:14;20096:4;20089:5;20085:16;20079:23;20108:63;20165:4;20160:3;20156:14;20142:12;20108:63;;;20036:141;20247:4;20240:5;20236:16;20230:23;20259:63;20316:4;20311:3;20307:14;20293:12;20259:63;;;20187:141;19989:354;;;;20405:540;20534:4;20529:3;20525:14;20614:4;20607:5;20603:16;20597:23;20626:105;20725:4;20720:3;20716:14;20702:12;20626:105;;;20554:183;20807:4;20800:5;20796:16;20790:23;20819:105;20918:4;20913:3;20909:14;20895:12;20819:105;;;20747:183;20507:438;;;;21007:550;21146:4;21141:3;21137:14;21226:4;21219:5;21215:16;21209:23;21238:105;21337:4;21332:3;21328:14;21314:12;21238:105;;;21166:183;21419:4;21412:5;21408:16;21402:23;21431:105;21530:4;21525:3;21521:14;21507:12;21431:105;;;21359:183;21119:438;;;;21629:757;21768:6;21763:3;21759:16;21850:4;21843:5;21839:16;21833:23;21862:109;21965:4;21960:3;21956:14;21942:12;21862:109;;;21790:187;22047:4;22040:5;22036:16;22030:23;22059:109;22162:4;22157:3;22153:14;22139:12;22059:109;;;21987:187;22244:4;22237:5;22233:16;22227:23;22256:109;22359:4;22354:3;22350:14;22336:12;22256:109;;;22184:187;21741:645;;;;22393:103;22466:24;22484:5;22466:24;;;22461:3;22454:37;22448:48;;;22503:113;22586:24;22604:5;22586:24;;;22581:3;22574:37;22568:48;;;22623:213;;22741:2;22730:9;22726:18;22718:26;;22755:71;22823:1;22812:9;22808:17;22799:6;22755:71;;;22712:124;;;;;22843:229;;22969:2;22958:9;22954:18;22946:26;;22983:79;23059:1;23048:9;23044:17;23035:6;22983:79;;;22940:132;;;;;23079:647;;23307:3;23296:9;23292:19;23284:27;;23322:79;23398:1;23387:9;23383:17;23374:6;23322:79;;;23412:72;23480:2;23469:9;23465:18;23456:6;23412:72;;;23495;23563:2;23552:9;23548:18;23539:6;23495:72;;;23615:9;23609:4;23605:20;23600:2;23589:9;23585:18;23578:48;23640:76;23711:4;23702:6;23640:76;;;23632:84;;23278:448;;;;;;;;23733:435;;23907:2;23896:9;23892:18;23884:26;;23921:71;23989:1;23978:9;23974:17;23965:6;23921:71;;;24003:72;24071:2;24060:9;24056:18;24047:6;24003:72;;;24086;24154:2;24143:9;24139:18;24130:6;24086:72;;;23878:290;;;;;;;24175:201;;24287:2;24276:9;24272:18;24264:26;;24301:65;24363:1;24352:9;24348:17;24339:6;24301:65;;;24258:118;;;;;24383:301;;24521:2;24510:9;24506:18;24498:26;;24571:9;24565:4;24561:20;24557:1;24546:9;24542:17;24535:47;24596:78;24669:4;24660:6;24596:78;;;24588:86;;24492:192;;;;;24691:407;;24882:2;24871:9;24867:18;24859:26;;24932:9;24926:4;24922:20;24918:1;24907:9;24903:17;24896:47;24957:131;25083:4;24957:131;;;24949:139;;24853:245;;;;25105:407;;25296:2;25285:9;25281:18;25273:26;;25346:9;25340:4;25336:20;25332:1;25321:9;25317:17;25310:47;25371:131;25497:4;25371:131;;;25363:139;;25267:245;;;;25519:407;;25710:2;25699:9;25695:18;25687:26;;25760:9;25754:4;25750:20;25746:1;25735:9;25731:17;25724:47;25785:131;25911:4;25785:131;;;25777:139;;25681:245;;;;25933:407;;26124:2;26113:9;26109:18;26101:26;;26174:9;26168:4;26164:20;26160:1;26149:9;26145:17;26138:47;26199:131;26325:4;26199:131;;;26191:139;;26095:245;;;;26347:407;;26538:2;26527:9;26523:18;26515:26;;26588:9;26582:4;26578:20;26574:1;26563:9;26559:17;26552:47;26613:131;26739:4;26613:131;;;26605:139;;26509:245;;;;26761:407;;26952:2;26941:9;26937:18;26929:26;;27002:9;26996:4;26992:20;26988:1;26977:9;26973:17;26966:47;27027:131;27153:4;27027:131;;;27019:139;;26923:245;;;;27175:407;;27366:2;27355:9;27351:18;27343:26;;27416:9;27410:4;27406:20;27402:1;27391:9;27387:17;27380:47;27441:131;27567:4;27441:131;;;27433:139;;27337:245;;;;27589:407;;27780:2;27769:9;27765:18;27757:26;;27830:9;27824:4;27820:20;27816:1;27805:9;27801:17;27794:47;27855:131;27981:4;27855:131;;;27847:139;;27751:245;;;;28003:407;;28194:2;28183:9;28179:18;28171:26;;28244:9;28238:4;28234:20;28230:1;28219:9;28215:17;28208:47;28269:131;28395:4;28269:131;;;28261:139;;28165:245;;;;28417:407;;28608:2;28597:9;28593:18;28585:26;;28658:9;28652:4;28648:20;28644:1;28633:9;28629:17;28622:47;28683:131;28809:4;28683:131;;;28675:139;;28579:245;;;;28831:407;;29022:2;29011:9;29007:18;28999:26;;29072:9;29066:4;29062:20;29058:1;29047:9;29043:17;29036:47;29097:131;29223:4;29097:131;;;29089:139;;28993:245;;;;29245:407;;29436:2;29425:9;29421:18;29413:26;;29486:9;29480:4;29476:20;29472:1;29461:9;29457:17;29450:47;29511:131;29637:4;29511:131;;;29503:139;;29407:245;;;;29659:407;;29850:2;29839:9;29835:18;29827:26;;29900:9;29894:4;29890:20;29886:1;29875:9;29871:17;29864:47;29925:131;30051:4;29925:131;;;29917:139;;29821:245;;;;30073:407;;30264:2;30253:9;30249:18;30241:26;;30314:9;30308:4;30304:20;30300:1;30289:9;30285:17;30278:47;30339:131;30465:4;30339:131;;;30331:139;;30235:245;;;;30487:407;;30678:2;30667:9;30663:18;30655:26;;30728:9;30722:4;30718:20;30714:1;30703:9;30699:17;30692:47;30753:131;30879:4;30753:131;;;30745:139;;30649:245;;;;30901:917;;31287:3;31276:9;31272:19;31264:27;;31302:117;31416:1;31405:9;31401:17;31392:6;31302:117;;;31430:118;31544:2;31533:9;31529:18;31520:6;31430:118;;;31559:119;31673:3;31662:9;31658:19;31649:6;31559:119;;;31689;31803:3;31792:9;31788:19;31779:6;31689:119;;;31258:560;;;;;;;;31825:510;;32063:3;32052:9;32048:19;32040:27;;32078:117;32192:1;32181:9;32177:17;32168:6;32078:117;;;32206:119;32320:3;32309:9;32305:19;32296:6;32206:119;;;32034:301;;;;;;32342:213;;32460:2;32449:9;32445:18;32437:26;;32474:71;32542:1;32531:9;32527:17;32518:6;32474:71;;;32431:124;;;;;32562:256;;32624:2;32618:9;32608:19;;32662:4;32654:6;32650:17;32761:6;32749:10;32746:22;32725:18;32713:10;32710:34;32707:62;32704:2;;;32782:1;32779;32772:12;32704:2;32802:10;32798:2;32791:22;32602:216;;;;;32825:240;;32978:18;32970:6;32967:30;32964:2;;;33010:1;33007;33000:12;32964:2;33045:4;33037:6;33033:17;33025:25;;32901:164;;;;33072:244;;33229:18;33221:6;33218:30;33215:2;;;33261:1;33258;33251:12;33215:2;33296:4;33288:6;33284:17;33276:25;;33152:164;;;;33323:321;;33466:18;33458:6;33455:30;33452:2;;;33498:1;33495;33488:12;33452:2;33565:4;33561:9;33554:4;33546:6;33542:17;33538:33;33530:41;;33629:4;33623;33619:15;33611:23;;33389:255;;;;33651:322;;33795:18;33787:6;33784:30;33781:2;;;33827:1;33824;33817:12;33781:2;33894:4;33890:9;33883:4;33875:6;33871:17;33867:33;33859:41;;33958:4;33952;33948:15;33940:23;;33718:255;;;;33980:93;;34060:3;34052:11;;34046:27;;;;34080:97;;34164:3;34156:11;;34150:27;;;;34184:104;;34274:4;34264:14;;34252:36;;;;34295:108;;34389:4;34379:14;;34367:36;;;;34410:121;;34503:5;34497:12;34487:22;;34468:63;;;;34538:122;;34632:5;34626:12;34616:22;;34597:63;;;;34667:102;;34759:4;34754:3;34750:14;34742:22;;34736:33;;;;34776:106;;34872:4;34867:3;34863:14;34855:22;;34849:33;;;;34890:130;;35011:3;34996:18;;34989:31;;;;;35029:140;;35160:3;35145:18;;35138:31;;;;;35178:162;;35292:6;35287:3;35280:19;35329:4;35324:3;35320:14;35305:29;;35273:67;;;;;35349:163;;35464:6;35459:3;35452:19;35501:4;35496:3;35492:14;35477:29;;35445:67;;;;;35520:91;;35582:24;35600:5;35582:24;;;35571:35;;35565:46;;;;35618:85;;35691:5;35684:13;35677:21;35666:32;;35660:43;;;;35710:72;;35772:5;35761:16;;35755:27;;;;35789:144;;35861:66;35854:5;35850:78;35839:89;;35833:100;;;;35940:121;;36013:42;36006:5;36002:54;35991:65;;35985:76;;;;36068:72;;36130:5;36119:16;;36113:27;;;;36147:129;;36234:37;36265:5;36234:37;;;36221:50;;36215:61;;;;36283:121;;36362:37;36393:5;36362:37;;;36349:50;;36343:61;;;;36411:108;;36490:24;36508:5;36490:24;;;36477:37;;36471:48;;;;36527:145;36608:6;36603:3;36598;36585:30;36664:1;36655:6;36650:3;36646:16;36639:27;36578:94;;;;36681:268;36746:1;36753:101;36767:6;36764:1;36761:13;36753:101;;;36843:1;36838:3;36834:11;36828:18;36824:1;36819:3;36815:11;36808:39;36789:2;36786:1;36782:10;36777:15;;36753:101;;;36869:6;36866:1;36863:13;36860:2;;;36934:1;36925:6;36920:3;36916:16;36909:27;36860:2;36730:219;;;;;36957:97;;37045:2;37041:7;37036:2;37029:5;37025:14;37021:28;37011:38;;37005:49;;;;37062:117;37131:24;37149:5;37131:24;;;37124:5;37121:35;37111:2;;37170:1;37167;37160:12;37111:2;37105:74;;37186:111;37252:21;37267:5;37252:21;;;37245:5;37242:32;37232:2;;37288:1;37285;37278:12;37232:2;37226:71;;37304:117;37373:24;37391:5;37373:24;;;37366:5;37363:35;37353:2;;37412:1;37409;37402:12;37353:2;37347:74;;37428:115;37496:23;37513:5;37496:23;;;37489:5;37486:34;37476:2;;37534:1;37531;37524:12;37476:2;37470:73;;37550:117;37619:24;37637:5;37619:24;;;37612:5;37609:35;37599:2;;37658:1;37655;37648:12;37599:2;37593:74;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721Mintable.sol\";\nimport \"./SquareVerifier.sol\";\n\ncontract SolnSquareVerifier is ERC721Mintable {\n\n    event SolutionAdded(address to, uint256 tokenId, bytes32 proofHash);\n\n    SquareVerifier private _verifier;\n\n    struct Solution {\n        address to;\n        uint256 tokenId;\n    }\n\n    mapping(bytes32 => Solution) private _solutions;\n\n\n    constructor (address verifierContract) ERC721Mintable(\n        \"Real State Homes\",\n        \"RSH\",\n        \"https://s3-us-west-2.amazonaws.com/udacity-blockchain/capstone/\"\n    ) public {\n        _verifier = SquareVerifier(verifierContract);\n    }\n\n    function addSolution(address to, uint256 tokenId, bytes32 proofHash) internal {\n        require(_solutions[proofHash].to == address(0), \"SolnSquareVerifier: solution already used\");\n\n        _solutions[proofHash]= Solution({to: to, tokenId: tokenId});\n\n        emit SolutionAdded(to, tokenId, proofHash);\n    }\n\n    function mint(address to, uint256 tokenId, SquareVerifier.Proof memory proof, uint[2] memory inputs) public {\n        require(_verifier.verifyTx(proof, inputs), \"SolnSquareVerifier: solution not verified\");\n\n        addSolution(to, tokenId, _getProofHash(proof, inputs));\n        super.mint(to, tokenId, \"\");\n    }\n\n    function _getProofHash(SquareVerifier.Proof memory proof, uint[2] memory inputs) internal pure returns (bytes32)\n    {\n        return keccak256(abi.encode(proof.a, proof.b, proof.c, inputs));\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/sangarbe/Workspace/learning/blockchain-project-5/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        8091
      ]
    },
    "id": 8092,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7947,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:12"
      },
      {
        "id": 7948,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:12"
      },
      {
        "absolutePath": "project:/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7949,
        "nodeType": "ImportDirective",
        "scope": 8092,
        "sourceUnit": 1536,
        "src": "68:30:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/SquareVerifier.sol",
        "file": "./SquareVerifier.sol",
        "id": 7950,
        "nodeType": "ImportDirective",
        "scope": 8092,
        "sourceUnit": 9014,
        "src": "99:30:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7951,
              "name": "ERC721Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1535,
              "src": "162:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Mintable_$1535",
                "typeString": "contract ERC721Mintable"
              }
            },
            "id": 7952,
            "nodeType": "InheritanceSpecifier",
            "src": "162:14:12"
          }
        ],
        "contractDependencies": [
          26,
          127,
          137,
          442,
          1062,
          1360,
          1491,
          1535,
          7860,
          7945
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 8091,
        "linearizedBaseContracts": [
          8091,
          1535,
          1491,
          7860,
          1360,
          1062,
          127,
          137,
          7945,
          442,
          26
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": null,
            "id": 7960,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7959,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7954,
                  "indexed": false,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7960,
                  "src": "204:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7953,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "204:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7956,
                  "indexed": false,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7960,
                  "src": "216:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7955,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "216:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7958,
                  "indexed": false,
                  "name": "proofHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 7960,
                  "src": "233:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7957,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "233:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "203:48:12"
            },
            "src": "184:68:12"
          },
          {
            "constant": false,
            "id": 7962,
            "name": "_verifier",
            "nodeType": "VariableDeclaration",
            "scope": 8091,
            "src": "258:32:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SquareVerifier_$9013",
              "typeString": "contract SquareVerifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7961,
              "name": "SquareVerifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9013,
              "src": "258:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SquareVerifier_$9013",
                "typeString": "contract SquareVerifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7967,
            "members": [
              {
                "constant": false,
                "id": 7964,
                "name": "to",
                "nodeType": "VariableDeclaration",
                "scope": 7967,
                "src": "323:10:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7963,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "323:7:12",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7966,
                "name": "tokenId",
                "nodeType": "VariableDeclaration",
                "scope": 7967,
                "src": "343:15:12",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7965,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "343:7:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 8091,
            "src": "297:68:12",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7971,
            "name": "_solutions",
            "nodeType": "VariableDeclaration",
            "scope": 8091,
            "src": "371:47:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7967_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7970,
              "keyType": {
                "id": 7968,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "379:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "371:28:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7967_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7969,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7967,
                "src": "390:8:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7967_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 7987,
              "nodeType": "Block",
              "src": "611:61:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7981,
                      "name": "_verifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7962,
                      "src": "621:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$9013",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7983,
                          "name": "verifierContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7973,
                          "src": "648:16:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7982,
                        "name": "SquareVerifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9013,
                        "src": "633:14:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SquareVerifier_$9013_$",
                          "typeString": "type(contract SquareVerifier)"
                        }
                      },
                      "id": 7984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "633:32:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SquareVerifier_$9013",
                        "typeString": "contract SquareVerifier"
                      }
                    },
                    "src": "621:44:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SquareVerifier_$9013",
                      "typeString": "contract SquareVerifier"
                    }
                  },
                  "id": 7986,
                  "nodeType": "ExpressionStatement",
                  "src": "621:44:12"
                }
              ]
            },
            "documentation": null,
            "id": 7988,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5265616c20537461746520486f6d6573",
                    "id": 7976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "489:18:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3456f8cc498a5f4fdd89590e0de67ef655e64eee227583f8dfdaa221ff87c381",
                      "typeString": "literal_string \"Real State Homes\""
                    },
                    "value": "Real State Homes"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "525348",
                    "id": 7977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "517:5:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_ef486022f78e8d209ed6980bdb8f3ffe962a6ba6ff7bf1131ae781ec60a47180",
                      "typeString": "literal_string \"RSH\""
                    },
                    "value": "RSH"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
                    "id": 7978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "532:65:12",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_cfa4573958f09c487edb2f9856efbbf1d5e6472e1155243fcdb5ea3c5dfd2e5a",
                      "typeString": "literal_string \"https://s3-us-west-2.amazonaws.com/udacity-blockchain/capstone/\""
                    },
                    "value": "https://s3-us-west-2.amazonaws.com/udacity-blockchain/capstone/"
                  }
                ],
                "id": 7979,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7975,
                  "name": "ERC721Mintable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1535,
                  "src": "465:14:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Mintable_$1535_$",
                    "typeString": "type(contract ERC721Mintable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "465:138:12"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7973,
                  "name": "verifierContract",
                  "nodeType": "VariableDeclaration",
                  "scope": 7988,
                  "src": "439:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "439:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "438:26:12"
            },
            "returnParameters": {
              "id": 7980,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:0:12"
            },
            "scope": 8091,
            "src": "426:246:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8024,
              "nodeType": "Block",
              "src": "756:232:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 8005,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7998,
                              "name": "_solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7971,
                              "src": "774:10:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7967_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 8000,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7999,
                              "name": "proofHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7994,
                              "src": "785:9:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "774:21:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7967_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 8001,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "to",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7964,
                          "src": "774:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 8003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "810:1:12",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 8002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "802:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 8004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "802:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "774:38:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c6e53717561726556657269666965723a20736f6c7574696f6e20616c72656164792075736564",
                        "id": 8006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "814:43:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7d1687177767454568a68cdf998a2a7d2f414f4cd3d5a3483069d1824c377651",
                          "typeString": "literal_string \"SolnSquareVerifier: solution already used\""
                        },
                        "value": "SolnSquareVerifier: solution already used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7d1687177767454568a68cdf998a2a7d2f414f4cd3d5a3483069d1824c377651",
                          "typeString": "literal_string \"SolnSquareVerifier: solution already used\""
                        }
                      ],
                      "id": 7997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9031,
                        9032
                      ],
                      "referencedDeclaration": 9032,
                      "src": "766:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:92:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8008,
                  "nodeType": "ExpressionStatement",
                  "src": "766:92:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 8009,
                        "name": "_solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7971,
                        "src": "869:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7967_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 8011,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 8010,
                        "name": "proofHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7994,
                        "src": "880:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "869:21:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7967_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 8013,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7990,
                          "src": "906:2:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 8014,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7992,
                          "src": "919:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 8012,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7967,
                        "src": "892:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7967_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 8015,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "to",
                        "tokenId"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "892:36:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7967_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "869:59:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7967_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 8017,
                  "nodeType": "ExpressionStatement",
                  "src": "869:59:12"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8019,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7990,
                        "src": "958:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8020,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7992,
                        "src": "962:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8021,
                        "name": "proofHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7994,
                        "src": "971:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 8018,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7960,
                      "src": "944:13:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 8022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "944:37:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8023,
                  "nodeType": "EmitStatement",
                  "src": "939:42:12"
                }
              ]
            },
            "documentation": null,
            "id": 8025,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7995,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7990,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 8025,
                  "src": "699:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7989,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "699:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7992,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8025,
                  "src": "711:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7991,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "711:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7994,
                  "name": "proofHash",
                  "nodeType": "VariableDeclaration",
                  "scope": 8025,
                  "src": "728:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7993,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "698:48:12"
            },
            "returnParameters": {
              "id": 7996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "756:0:12"
            },
            "scope": 8091,
            "src": "678:310:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8064,
              "nodeType": "Block",
              "src": "1102:206:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8041,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8031,
                            "src": "1139:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8687_memory_ptr",
                              "typeString": "struct SquareVerifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 8042,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8035,
                            "src": "1146:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8687_memory_ptr",
                              "typeString": "struct SquareVerifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 8039,
                            "name": "_verifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7962,
                            "src": "1120:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SquareVerifier_$9013",
                              "typeString": "contract SquareVerifier"
                            }
                          },
                          "id": 8040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9012,
                          "src": "1120:18:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8687_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct SquareVerifier.Proof memory,uint256[2] memory) view external returns (bool)"
                          }
                        },
                        "id": 8043,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1120:33:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c6e53717561726556657269666965723a20736f6c7574696f6e206e6f74207665726966696564",
                        "id": 8044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1155:43:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_202f518697101fc46f2723dc5216cfd9df6118006601b46bdb5d4ea30364a485",
                          "typeString": "literal_string \"SolnSquareVerifier: solution not verified\""
                        },
                        "value": "SolnSquareVerifier: solution not verified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_202f518697101fc46f2723dc5216cfd9df6118006601b46bdb5d4ea30364a485",
                          "typeString": "literal_string \"SolnSquareVerifier: solution not verified\""
                        }
                      ],
                      "id": 8038,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        9031,
                        9032
                      ],
                      "referencedDeclaration": 9032,
                      "src": "1112:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:87:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8046,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:87:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8048,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8027,
                        "src": "1222:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8049,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8029,
                        "src": "1226:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 8051,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8031,
                            "src": "1249:5:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8687_memory_ptr",
                              "typeString": "struct SquareVerifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 8052,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8035,
                            "src": "1256:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8687_memory_ptr",
                              "typeString": "struct SquareVerifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "id": 8050,
                          "name": "_getProofHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8090,
                          "src": "1235:13:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Proof_$8687_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct SquareVerifier.Proof memory,uint256[2] memory) pure returns (bytes32)"
                          }
                        },
                        "id": 8053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1235:28:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 8047,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8025,
                      "src": "1210:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint256,bytes32)"
                      }
                    },
                    "id": 8054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1210:54:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8055,
                  "nodeType": "ExpressionStatement",
                  "src": "1210:54:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8059,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8027,
                        "src": "1285:2:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 8060,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8029,
                        "src": "1289:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "",
                        "id": 8061,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1298:2:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8056,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9087,
                        "src": "1274:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$8091",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 8058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1534,
                      "src": "1274:10:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 8062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1274:27:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8063,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:27:12"
                }
              ]
            },
            "documentation": null,
            "id": 8065,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8036,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8027,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 8065,
                  "src": "1008:10:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8026,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1008:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8029,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 8065,
                  "src": "1020:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 8028,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1020:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8031,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 8065,
                  "src": "1037:33:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8687_memory_ptr",
                    "typeString": "struct SquareVerifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8030,
                    "name": "SquareVerifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8687,
                    "src": "1037:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8687_storage_ptr",
                      "typeString": "struct SquareVerifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8035,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 8065,
                  "src": "1072:21:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8032,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1072:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8034,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 8033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1077:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1072:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1007:87:12"
            },
            "returnParameters": {
              "id": 8037,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1102:0:12"
            },
            "scope": 8091,
            "src": "994:314:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8089,
              "nodeType": "Block",
              "src": "1431:80:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8079,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8067,
                              "src": "1469:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$8687_memory_ptr",
                                "typeString": "struct SquareVerifier.Proof memory"
                              }
                            },
                            "id": 8080,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "a",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8682,
                            "src": "1469:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_G1Point_$8099_memory",
                              "typeString": "struct Pairing.G1Point memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8081,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8067,
                              "src": "1478:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$8687_memory_ptr",
                                "typeString": "struct SquareVerifier.Proof memory"
                              }
                            },
                            "id": 8082,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "b",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8684,
                            "src": "1478:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_G2Point_$8108_memory",
                              "typeString": "struct Pairing.G2Point memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 8083,
                              "name": "proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8067,
                              "src": "1487:5:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$8687_memory_ptr",
                                "typeString": "struct SquareVerifier.Proof memory"
                              }
                            },
                            "id": 8084,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "c",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 8686,
                            "src": "1487:7:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_G1Point_$8099_memory",
                              "typeString": "struct Pairing.G1Point memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 8085,
                            "name": "inputs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8071,
                            "src": "1496:6:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_G1Point_$8099_memory",
                              "typeString": "struct Pairing.G1Point memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_G2Point_$8108_memory",
                              "typeString": "struct Pairing.G2Point memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_G1Point_$8099_memory",
                              "typeString": "struct Pairing.G1Point memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 8077,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9015,
                            "src": "1458:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 8078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1458:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 8086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1458:45:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 8076,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9022,
                      "src": "1448:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 8087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1448:56:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 8075,
                  "id": 8088,
                  "nodeType": "Return",
                  "src": "1441:63:12"
                }
              ]
            },
            "documentation": null,
            "id": 8090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getProofHash",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8072,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8067,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 8090,
                  "src": "1337:33:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8687_memory_ptr",
                    "typeString": "struct SquareVerifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 8066,
                    "name": "SquareVerifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8687,
                    "src": "1337:20:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8687_storage_ptr",
                      "typeString": "struct SquareVerifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 8071,
                  "name": "inputs",
                  "nodeType": "VariableDeclaration",
                  "scope": 8090,
                  "src": "1372:21:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 8068,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1372:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 8070,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 8069,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1377:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1372:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1336:58:12"
            },
            "returnParameters": {
              "id": 8075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8074,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8090,
                  "src": "1418:7:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 8073,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1417:9:12"
            },
            "scope": 8091,
            "src": "1314:197:12",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 8092,
        "src": "131:1382:12"
      }
    ],
    "src": "0:1540:12"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          8091
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7947,
        "name": "PragmaDirective",
        "src": "0:32:12"
      },
      {
        "attributes": {
          "literals": [
            "experimental",
            "ABIEncoderV2"
          ]
        },
        "id": 7948,
        "name": "PragmaDirective",
        "src": "33:33:12"
      },
      {
        "attributes": {
          "SourceUnit": 1536,
          "absolutePath": "project:/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 8092,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7949,
        "name": "ImportDirective",
        "src": "68:30:12"
      },
      {
        "attributes": {
          "SourceUnit": 9014,
          "absolutePath": "project:/contracts/SquareVerifier.sol",
          "file": "./SquareVerifier.sol",
          "scope": 8092,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7950,
        "name": "ImportDirective",
        "src": "99:30:12"
      },
      {
        "attributes": {
          "contractDependencies": [
            26,
            127,
            137,
            442,
            1062,
            1360,
            1491,
            1535,
            7860,
            7945
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            8091,
            1535,
            1491,
            7860,
            1360,
            1062,
            127,
            137,
            7945,
            442,
            26
          ],
          "name": "SolnSquareVerifier",
          "scope": 8092
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Mintable",
                  "referencedDeclaration": 1535,
                  "type": "contract ERC721Mintable"
                },
                "id": 7951,
                "name": "UserDefinedTypeName",
                "src": "162:14:12"
              }
            ],
            "id": 7952,
            "name": "InheritanceSpecifier",
            "src": "162:14:12"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "to",
                      "scope": 7960,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7953,
                        "name": "ElementaryTypeName",
                        "src": "204:7:12"
                      }
                    ],
                    "id": 7954,
                    "name": "VariableDeclaration",
                    "src": "204:10:12"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "tokenId",
                      "scope": 7960,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7955,
                        "name": "ElementaryTypeName",
                        "src": "216:7:12"
                      }
                    ],
                    "id": 7956,
                    "name": "VariableDeclaration",
                    "src": "216:15:12"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "proofHash",
                      "scope": 7960,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7957,
                        "name": "ElementaryTypeName",
                        "src": "233:7:12"
                      }
                    ],
                    "id": 7958,
                    "name": "VariableDeclaration",
                    "src": "233:17:12"
                  }
                ],
                "id": 7959,
                "name": "ParameterList",
                "src": "203:48:12"
              }
            ],
            "id": 7960,
            "name": "EventDefinition",
            "src": "184:68:12"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_verifier",
              "scope": 8091,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract SquareVerifier",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SquareVerifier",
                  "referencedDeclaration": 9013,
                  "type": "contract SquareVerifier"
                },
                "id": 7961,
                "name": "UserDefinedTypeName",
                "src": "258:14:12"
              }
            ],
            "id": 7962,
            "name": "VariableDeclaration",
            "src": "258:32:12"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 8091,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "to",
                  "scope": 7967,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7963,
                    "name": "ElementaryTypeName",
                    "src": "323:7:12"
                  }
                ],
                "id": 7964,
                "name": "VariableDeclaration",
                "src": "323:10:12"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "tokenId",
                  "scope": 7967,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7965,
                    "name": "ElementaryTypeName",
                    "src": "343:7:12"
                  }
                ],
                "id": 7966,
                "name": "VariableDeclaration",
                "src": "343:15:12"
              }
            ],
            "id": 7967,
            "name": "StructDefinition",
            "src": "297:68:12"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_solutions",
              "scope": 8091,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7968,
                    "name": "ElementaryTypeName",
                    "src": "379:7:12"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7967,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7969,
                    "name": "UserDefinedTypeName",
                    "src": "390:8:12"
                  }
                ],
                "id": 7970,
                "name": "Mapping",
                "src": "371:28:12"
              }
            ],
            "id": 7971,
            "name": "VariableDeclaration",
            "src": "371:47:12"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 8091,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "verifierContract",
                      "scope": 7988,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7972,
                        "name": "ElementaryTypeName",
                        "src": "439:7:12"
                      }
                    ],
                    "id": 7973,
                    "name": "VariableDeclaration",
                    "src": "439:24:12"
                  }
                ],
                "id": 7974,
                "name": "ParameterList",
                "src": "438:26:12"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7980,
                "name": "ParameterList",
                "src": "611:0:12"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1535,
                      "type": "type(contract ERC721Mintable)",
                      "value": "ERC721Mintable"
                    },
                    "id": 7975,
                    "name": "Identifier",
                    "src": "465:14:12"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "5265616c20537461746520486f6d6573",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Real State Homes\"",
                      "value": "Real State Homes"
                    },
                    "id": 7976,
                    "name": "Literal",
                    "src": "489:18:12"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "525348",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"RSH\"",
                      "value": "RSH"
                    },
                    "id": 7977,
                    "name": "Literal",
                    "src": "517:5:12"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "68747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"https://s3-us-west-2.amazonaws.com/udacity-blockchain/capstone/\"",
                      "value": "https://s3-us-west-2.amazonaws.com/udacity-blockchain/capstone/"
                    },
                    "id": 7978,
                    "name": "Literal",
                    "src": "532:65:12"
                  }
                ],
                "id": 7979,
                "name": "ModifierInvocation",
                "src": "465:138:12"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract SquareVerifier"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7962,
                              "type": "contract SquareVerifier",
                              "value": "_verifier"
                            },
                            "id": 7981,
                            "name": "Identifier",
                            "src": "621:9:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract SquareVerifier",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 9013,
                                  "type": "type(contract SquareVerifier)",
                                  "value": "SquareVerifier"
                                },
                                "id": 7982,
                                "name": "Identifier",
                                "src": "633:14:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7973,
                                  "type": "address",
                                  "value": "verifierContract"
                                },
                                "id": 7983,
                                "name": "Identifier",
                                "src": "648:16:12"
                              }
                            ],
                            "id": 7984,
                            "name": "FunctionCall",
                            "src": "633:32:12"
                          }
                        ],
                        "id": 7985,
                        "name": "Assignment",
                        "src": "621:44:12"
                      }
                    ],
                    "id": 7986,
                    "name": "ExpressionStatement",
                    "src": "621:44:12"
                  }
                ],
                "id": 7987,
                "name": "Block",
                "src": "611:61:12"
              }
            ],
            "id": 7988,
            "name": "FunctionDefinition",
            "src": "426:246:12"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 8091,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 8025,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7989,
                        "name": "ElementaryTypeName",
                        "src": "699:7:12"
                      }
                    ],
                    "id": 7990,
                    "name": "VariableDeclaration",
                    "src": "699:10:12"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 8025,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7991,
                        "name": "ElementaryTypeName",
                        "src": "711:7:12"
                      }
                    ],
                    "id": 7992,
                    "name": "VariableDeclaration",
                    "src": "711:15:12"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proofHash",
                      "scope": 8025,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 7993,
                        "name": "ElementaryTypeName",
                        "src": "728:7:12"
                      }
                    ],
                    "id": 7994,
                    "name": "VariableDeclaration",
                    "src": "728:17:12"
                  }
                ],
                "id": 7995,
                "name": "ParameterList",
                "src": "698:48:12"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7996,
                "name": "ParameterList",
                "src": "756:0:12"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_7d1687177767454568a68cdf998a2a7d2f414f4cd3d5a3483069d1824c377651",
                                  "typeString": "literal_string \"SolnSquareVerifier: solution already used\""
                                }
                              ],
                              "overloadedDeclarations": [
                                9031,
                                9032
                              ],
                              "referencedDeclaration": 9032,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7997,
                            "name": "Identifier",
                            "src": "766:7:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "to",
                                  "referencedDeclaration": 7964,
                                  "type": "address"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7971,
                                          "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "_solutions"
                                        },
                                        "id": 7998,
                                        "name": "Identifier",
                                        "src": "774:10:12"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7994,
                                          "type": "bytes32",
                                          "value": "proofHash"
                                        },
                                        "id": 7999,
                                        "name": "Identifier",
                                        "src": "785:9:12"
                                      }
                                    ],
                                    "id": 8000,
                                    "name": "IndexAccess",
                                    "src": "774:21:12"
                                  }
                                ],
                                "id": 8001,
                                "name": "MemberAccess",
                                "src": "774:24:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address payable",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "type": "type(address)",
                                      "value": "address"
                                    },
                                    "id": 8002,
                                    "name": "ElementaryTypeNameExpression",
                                    "src": "802:7:12"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "subdenomination": null,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 8003,
                                    "name": "Literal",
                                    "src": "810:1:12"
                                  }
                                ],
                                "id": 8004,
                                "name": "FunctionCall",
                                "src": "802:10:12"
                              }
                            ],
                            "id": 8005,
                            "name": "BinaryOperation",
                            "src": "774:38:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c6e53717561726556657269666965723a20736f6c7574696f6e20616c72656164792075736564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"SolnSquareVerifier: solution already used\"",
                              "value": "SolnSquareVerifier: solution already used"
                            },
                            "id": 8006,
                            "name": "Literal",
                            "src": "814:43:12"
                          }
                        ],
                        "id": 8007,
                        "name": "FunctionCall",
                        "src": "766:92:12"
                      }
                    ],
                    "id": 8008,
                    "name": "ExpressionStatement",
                    "src": "766:92:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7971,
                                  "type": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "_solutions"
                                },
                                "id": 8009,
                                "name": "Identifier",
                                "src": "869:10:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7994,
                                  "type": "bytes32",
                                  "value": "proofHash"
                                },
                                "id": 8010,
                                "name": "Identifier",
                                "src": "880:9:12"
                              }
                            ],
                            "id": 8011,
                            "name": "IndexAccess",
                            "src": "869:21:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": true,
                              "lValueRequested": false,
                              "names": [
                                "to",
                                "tokenId"
                              ],
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7967,
                                  "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                                  "value": "Solution"
                                },
                                "id": 8012,
                                "name": "Identifier",
                                "src": "892:8:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7990,
                                  "type": "address",
                                  "value": "to"
                                },
                                "id": 8013,
                                "name": "Identifier",
                                "src": "906:2:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7992,
                                  "type": "uint256",
                                  "value": "tokenId"
                                },
                                "id": 8014,
                                "name": "Identifier",
                                "src": "919:7:12"
                              }
                            ],
                            "id": 8015,
                            "name": "FunctionCall",
                            "src": "892:36:12"
                          }
                        ],
                        "id": 8016,
                        "name": "Assignment",
                        "src": "869:59:12"
                      }
                    ],
                    "id": 8017,
                    "name": "ExpressionStatement",
                    "src": "869:59:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7960,
                              "type": "function (address,uint256,bytes32)",
                              "value": "SolutionAdded"
                            },
                            "id": 8018,
                            "name": "Identifier",
                            "src": "944:13:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7990,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 8019,
                            "name": "Identifier",
                            "src": "958:2:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7992,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 8020,
                            "name": "Identifier",
                            "src": "962:7:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7994,
                              "type": "bytes32",
                              "value": "proofHash"
                            },
                            "id": 8021,
                            "name": "Identifier",
                            "src": "971:9:12"
                          }
                        ],
                        "id": 8022,
                        "name": "FunctionCall",
                        "src": "944:37:12"
                      }
                    ],
                    "id": 8023,
                    "name": "EmitStatement",
                    "src": "939:42:12"
                  }
                ],
                "id": 8024,
                "name": "Block",
                "src": "756:232:12"
              }
            ],
            "id": 8025,
            "name": "FunctionDefinition",
            "src": "678:310:12"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 8091,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 8065,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 8026,
                        "name": "ElementaryTypeName",
                        "src": "1008:7:12"
                      }
                    ],
                    "id": 8027,
                    "name": "VariableDeclaration",
                    "src": "1008:10:12"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 8065,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 8028,
                        "name": "ElementaryTypeName",
                        "src": "1020:7:12"
                      }
                    ],
                    "id": 8029,
                    "name": "VariableDeclaration",
                    "src": "1020:15:12"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 8065,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct SquareVerifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "SquareVerifier.Proof",
                          "referencedDeclaration": 8687,
                          "type": "struct SquareVerifier.Proof"
                        },
                        "id": 8030,
                        "name": "UserDefinedTypeName",
                        "src": "1037:20:12"
                      }
                    ],
                    "id": 8031,
                    "name": "VariableDeclaration",
                    "src": "1037:33:12"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "inputs",
                      "scope": 8065,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 8032,
                            "name": "ElementaryTypeName",
                            "src": "1072:4:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 8033,
                            "name": "Literal",
                            "src": "1077:1:12"
                          }
                        ],
                        "id": 8034,
                        "name": "ArrayTypeName",
                        "src": "1072:7:12"
                      }
                    ],
                    "id": 8035,
                    "name": "VariableDeclaration",
                    "src": "1072:21:12"
                  }
                ],
                "id": 8036,
                "name": "ParameterList",
                "src": "1007:87:12"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 8037,
                "name": "ParameterList",
                "src": "1102:0:12"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_202f518697101fc46f2723dc5216cfd9df6118006601b46bdb5d4ea30364a485",
                                  "typeString": "literal_string \"SolnSquareVerifier: solution not verified\""
                                }
                              ],
                              "overloadedDeclarations": [
                                9031,
                                9032
                              ],
                              "referencedDeclaration": 9032,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 8038,
                            "name": "Identifier",
                            "src": "1112:7:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$8687_memory_ptr",
                                      "typeString": "struct SquareVerifier.Proof memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "verifyTx",
                                  "referencedDeclaration": 9012,
                                  "type": "function (struct SquareVerifier.Proof memory,uint256[2] memory) view external returns (bool)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7962,
                                      "type": "contract SquareVerifier",
                                      "value": "_verifier"
                                    },
                                    "id": 8039,
                                    "name": "Identifier",
                                    "src": "1120:9:12"
                                  }
                                ],
                                "id": 8040,
                                "name": "MemberAccess",
                                "src": "1120:18:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8031,
                                  "type": "struct SquareVerifier.Proof memory",
                                  "value": "proof"
                                },
                                "id": 8041,
                                "name": "Identifier",
                                "src": "1139:5:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8035,
                                  "type": "uint256[2] memory",
                                  "value": "inputs"
                                },
                                "id": 8042,
                                "name": "Identifier",
                                "src": "1146:6:12"
                              }
                            ],
                            "id": 8043,
                            "name": "FunctionCall",
                            "src": "1120:33:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c6e53717561726556657269666965723a20736f6c7574696f6e206e6f74207665726966696564",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"SolnSquareVerifier: solution not verified\"",
                              "value": "SolnSquareVerifier: solution not verified"
                            },
                            "id": 8044,
                            "name": "Literal",
                            "src": "1155:43:12"
                          }
                        ],
                        "id": 8045,
                        "name": "FunctionCall",
                        "src": "1112:87:12"
                      }
                    ],
                    "id": 8046,
                    "name": "ExpressionStatement",
                    "src": "1112:87:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8025,
                              "type": "function (address,uint256,bytes32)",
                              "value": "addSolution"
                            },
                            "id": 8047,
                            "name": "Identifier",
                            "src": "1210:11:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8027,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 8048,
                            "name": "Identifier",
                            "src": "1222:2:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8029,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 8049,
                            "name": "Identifier",
                            "src": "1226:7:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Proof_$8687_memory_ptr",
                                      "typeString": "struct SquareVerifier.Proof memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8090,
                                  "type": "function (struct SquareVerifier.Proof memory,uint256[2] memory) pure returns (bytes32)",
                                  "value": "_getProofHash"
                                },
                                "id": 8050,
                                "name": "Identifier",
                                "src": "1235:13:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8031,
                                  "type": "struct SquareVerifier.Proof memory",
                                  "value": "proof"
                                },
                                "id": 8051,
                                "name": "Identifier",
                                "src": "1249:5:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8035,
                                  "type": "uint256[2] memory",
                                  "value": "inputs"
                                },
                                "id": 8052,
                                "name": "Identifier",
                                "src": "1256:6:12"
                              }
                            ],
                            "id": 8053,
                            "name": "FunctionCall",
                            "src": "1235:28:12"
                          }
                        ],
                        "id": 8054,
                        "name": "FunctionCall",
                        "src": "1210:54:12"
                      }
                    ],
                    "id": 8055,
                    "name": "ExpressionStatement",
                    "src": "1210:54:12"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bool",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "mint",
                              "referencedDeclaration": 1534,
                              "type": "function (address,uint256,string memory) returns (bool)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 9087,
                                  "type": "contract super SolnSquareVerifier",
                                  "value": "super"
                                },
                                "id": 8056,
                                "name": "Identifier",
                                "src": "1274:5:12"
                              }
                            ],
                            "id": 8058,
                            "name": "MemberAccess",
                            "src": "1274:10:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8027,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 8059,
                            "name": "Identifier",
                            "src": "1285:2:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 8029,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 8060,
                            "name": "Identifier",
                            "src": "1289:7:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"\"",
                              "value": ""
                            },
                            "id": 8061,
                            "name": "Literal",
                            "src": "1298:2:12"
                          }
                        ],
                        "id": 8062,
                        "name": "FunctionCall",
                        "src": "1274:27:12"
                      }
                    ],
                    "id": 8063,
                    "name": "ExpressionStatement",
                    "src": "1274:27:12"
                  }
                ],
                "id": 8064,
                "name": "Block",
                "src": "1102:206:12"
              }
            ],
            "id": 8065,
            "name": "FunctionDefinition",
            "src": "994:314:12"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_getProofHash",
              "scope": 8091,
              "stateMutability": "pure",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 8090,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "struct SquareVerifier.Proof",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "SquareVerifier.Proof",
                          "referencedDeclaration": 8687,
                          "type": "struct SquareVerifier.Proof"
                        },
                        "id": 8066,
                        "name": "UserDefinedTypeName",
                        "src": "1337:20:12"
                      }
                    ],
                    "id": 8067,
                    "name": "VariableDeclaration",
                    "src": "1337:33:12"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "inputs",
                      "scope": 8090,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 8068,
                            "name": "ElementaryTypeName",
                            "src": "1372:4:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 8069,
                            "name": "Literal",
                            "src": "1377:1:12"
                          }
                        ],
                        "id": 8070,
                        "name": "ArrayTypeName",
                        "src": "1372:7:12"
                      }
                    ],
                    "id": 8071,
                    "name": "VariableDeclaration",
                    "src": "1372:21:12"
                  }
                ],
                "id": 8072,
                "name": "ParameterList",
                "src": "1336:58:12"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 8090,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 8073,
                        "name": "ElementaryTypeName",
                        "src": "1418:7:12"
                      }
                    ],
                    "id": 8074,
                    "name": "VariableDeclaration",
                    "src": "1418:7:12"
                  }
                ],
                "id": 8075,
                "name": "ParameterList",
                "src": "1417:9:12"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 8075
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 9022,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 8076,
                            "name": "Identifier",
                            "src": "1448:9:12"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_G1Point_$8099_memory",
                                      "typeString": "struct Pairing.G1Point memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_G2Point_$8108_memory",
                                      "typeString": "struct Pairing.G2Point memory"
                                    },
                                    {
                                      "typeIdentifier": "t_struct$_G1Point_$8099_memory",
                                      "typeString": "struct Pairing.G1Point memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encode",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 9015,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 8077,
                                    "name": "Identifier",
                                    "src": "1458:3:12"
                                  }
                                ],
                                "id": 8078,
                                "name": "MemberAccess",
                                "src": "1458:10:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "a",
                                  "referencedDeclaration": 8682,
                                  "type": "struct Pairing.G1Point memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8067,
                                      "type": "struct SquareVerifier.Proof memory",
                                      "value": "proof"
                                    },
                                    "id": 8079,
                                    "name": "Identifier",
                                    "src": "1469:5:12"
                                  }
                                ],
                                "id": 8080,
                                "name": "MemberAccess",
                                "src": "1469:7:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "b",
                                  "referencedDeclaration": 8684,
                                  "type": "struct Pairing.G2Point memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8067,
                                      "type": "struct SquareVerifier.Proof memory",
                                      "value": "proof"
                                    },
                                    "id": 8081,
                                    "name": "Identifier",
                                    "src": "1478:5:12"
                                  }
                                ],
                                "id": 8082,
                                "name": "MemberAccess",
                                "src": "1478:7:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "c",
                                  "referencedDeclaration": 8686,
                                  "type": "struct Pairing.G1Point memory"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 8067,
                                      "type": "struct SquareVerifier.Proof memory",
                                      "value": "proof"
                                    },
                                    "id": 8083,
                                    "name": "Identifier",
                                    "src": "1487:5:12"
                                  }
                                ],
                                "id": 8084,
                                "name": "MemberAccess",
                                "src": "1487:7:12"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 8071,
                                  "type": "uint256[2] memory",
                                  "value": "inputs"
                                },
                                "id": 8085,
                                "name": "Identifier",
                                "src": "1496:6:12"
                              }
                            ],
                            "id": 8086,
                            "name": "FunctionCall",
                            "src": "1458:45:12"
                          }
                        ],
                        "id": 8087,
                        "name": "FunctionCall",
                        "src": "1448:56:12"
                      }
                    ],
                    "id": 8088,
                    "name": "Return",
                    "src": "1441:63:12"
                  }
                ],
                "id": 8089,
                "name": "Block",
                "src": "1431:80:12"
              }
            ],
            "id": 8090,
            "name": "FunctionDefinition",
            "src": "1314:197:12"
          }
        ],
        "id": 8091,
        "name": "ContractDefinition",
        "src": "131:1382:12"
      }
    ],
    "id": 8092,
    "name": "SourceUnit",
    "src": "0:1540:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x32DE2a28b6e6EC44782b757E688C596304697c49",
      "transactionHash": "0x4f39ecc969cc0e359cc6eb6e0878d52cbfd84ce43f9b4e22df730a1db9cf8d6b"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event"
        },
        "0xb28582aaae510e6d1868676347916349fa4c0c49734e1a01e4373ff26a57f092": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "bytes32",
              "name": "proofHash",
              "type": "bytes32"
            }
          ],
          "name": "SolutionAdded",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x7Edc98F01c63C8eE7A9a0828B46A3E4f6b59EE36",
      "transactionHash": "0x841bb06e3b255d07d8a99f4a8f20411809611a9194f0ba2e6aecc9646fd19227"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-27T13:09:08.743Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "mint(address,uint256,string)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint.",
          "tokenURI": "The token URI of the minted token."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Called by owner to pause the contract."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Called by owner to unpause the contract."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}